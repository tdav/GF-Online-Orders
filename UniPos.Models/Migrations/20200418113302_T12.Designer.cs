// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using UniPos.Models;

namespace UniPos.Models.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20200418113302_T12")]
    partial class T12
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("UniPos.Models.spAccessList", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("id")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("create_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CreateUser")
                        .HasColumnName("create_user")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<int>("Status")
                        .HasColumnName("status")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnName("update_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("UpdateUser")
                        .HasColumnName("update_user")
                        .HasColumnType("integer");

                    b.HasKey("Id")
                        .HasName("pk_sp_access_lists");

                    b.HasIndex("CreateUser")
                        .HasName("ix_sp_access_lists_create_user");

                    b.HasIndex("Status")
                        .HasName("ix_sp_access_lists_status");

                    b.ToTable("sp_access_lists");
                });

            modelBuilder.Entity("UniPos.Models.spCountry", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("id")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("create_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CreateUser")
                        .HasColumnName("create_user")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.Property<int>("Status")
                        .HasColumnName("status")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnName("update_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("UpdateUser")
                        .HasColumnName("update_user")
                        .HasColumnType("integer");

                    b.HasKey("Id")
                        .HasName("pk_sp_countries");

                    b.HasIndex("CreateUser")
                        .HasName("ix_sp_countries_create_user");

                    b.HasIndex("Status")
                        .HasName("ix_sp_countries_status");

                    b.ToTable("sp_countries");
                });

            modelBuilder.Entity("UniPos.Models.spDeliveryType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("id")
                        .HasColumnType("integer");

                    b.Property<decimal>("Cost")
                        .HasColumnName("cost")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("create_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CreateUser")
                        .HasColumnName("create_user")
                        .HasColumnType("integer");

                    b.Property<int>("DeliveryTime")
                        .HasColumnName("delivery_time")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<int>("Status")
                        .HasColumnName("status")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnName("update_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("UpdateUser")
                        .HasColumnName("update_user")
                        .HasColumnType("integer");

                    b.HasKey("Id")
                        .HasName("pk_sp_delivery_types");

                    b.HasIndex("CreateUser")
                        .HasName("ix_sp_delivery_types_create_user");

                    b.HasIndex("Status")
                        .HasName("ix_sp_delivery_types_status");

                    b.ToTable("sp_delivery_types");
                });

            modelBuilder.Entity("UniPos.Models.spDistrict", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("id")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("create_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CreateUser")
                        .HasColumnName("create_user")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.Property<int>("RegionId")
                        .HasColumnName("region_id")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnName("status")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnName("update_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("UpdateUser")
                        .HasColumnName("update_user")
                        .HasColumnType("integer");

                    b.HasKey("Id")
                        .HasName("pk_sp_districts");

                    b.HasIndex("CreateUser")
                        .HasName("ix_sp_districts_create_user");

                    b.HasIndex("RegionId")
                        .HasName("ix_sp_districts_region_id");

                    b.HasIndex("Status")
                        .HasName("ix_sp_districts_status");

                    b.ToTable("sp_districts");
                });

            modelBuilder.Entity("UniPos.Models.spDrug", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Barcode")
                        .HasColumnName("barcode")
                        .HasColumnType("character varying(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("create_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CreateUser")
                        .HasColumnName("create_user")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnName("description")
                        .HasColumnType("character varying(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Dose")
                        .HasColumnName("dose")
                        .HasColumnType("character varying(255)")
                        .HasMaxLength(255);

                    b.Property<int?>("DrugCategoryId")
                        .HasColumnName("drug_category_id")
                        .HasColumnType("integer");

                    b.Property<string>("DrugRecomendation")
                        .HasColumnName("drug_recomendation")
                        .HasColumnType("character varying(2000)")
                        .HasMaxLength(2000);

                    b.Property<string>("InternationalName")
                        .HasColumnName("international_name")
                        .HasColumnType("character varying(255)")
                        .HasMaxLength(255);

                    b.Property<int?>("ManufacturerId")
                        .HasColumnName("manufacturer_id")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("character varying(255)")
                        .HasMaxLength(255);

                    b.Property<int?>("PharmGroupId")
                        .HasColumnName("pharm_group_id")
                        .HasColumnType("integer");

                    b.Property<string>("Photo")
                        .HasColumnName("photo")
                        .HasColumnType("character varying(255)")
                        .HasMaxLength(255);

                    b.Property<int>("Piece")
                        .HasColumnName("piece")
                        .HasColumnType("integer");

                    b.Property<int?>("Special")
                        .HasColumnName("special")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnName("status")
                        .HasColumnType("integer");

                    b.Property<int>("UnitId")
                        .HasColumnName("unit_id")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnName("update_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("UpdateUser")
                        .HasColumnName("update_user")
                        .HasColumnType("integer");

                    b.Property<decimal>("VatRate")
                        .HasColumnName("vat_rate")
                        .HasColumnType("numeric");

                    b.HasKey("Id")
                        .HasName("pk_sp_drugs");

                    b.HasIndex("CreateUser")
                        .HasName("ix_sp_drugs_create_user");

                    b.HasIndex("Description")
                        .HasName("ix_sp_drugs_description");

                    b.HasIndex("DrugCategoryId")
                        .HasName("ix_sp_drugs_drug_category_id");

                    b.HasIndex("ManufacturerId")
                        .HasName("ix_sp_drugs_manufacturer_id");

                    b.HasIndex("PharmGroupId")
                        .HasName("ix_sp_drugs_pharm_group_id");

                    b.HasIndex("Status")
                        .HasName("ix_sp_drugs_status");

                    b.HasIndex("UnitId")
                        .HasName("ix_sp_drugs_unit_id");

                    b.ToTable("sp_drugs");
                });

            modelBuilder.Entity("UniPos.Models.spDrugCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("create_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CreateUser")
                        .HasColumnName("create_user")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.Property<int>("Status")
                        .HasColumnName("status")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnName("update_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("UpdateUser")
                        .HasColumnName("update_user")
                        .HasColumnType("integer");

                    b.HasKey("Id")
                        .HasName("pk_sp_drug_categories");

                    b.HasIndex("CreateUser")
                        .HasName("ix_sp_drug_categories_create_user");

                    b.HasIndex("Status")
                        .HasName("ix_sp_drug_categories_status");

                    b.ToTable("sp_drug_categories");
                });

            modelBuilder.Entity("UniPos.Models.spDrugStore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Address")
                        .HasColumnName("address")
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("create_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CreateUser")
                        .HasColumnName("create_user")
                        .HasColumnType("integer");

                    b.Property<int>("DistrictId")
                        .HasColumnName("district_id")
                        .HasColumnType("integer");

                    b.Property<decimal>("Latitude")
                        .HasColumnName("latitude")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Longitude")
                        .HasColumnName("longitude")
                        .HasColumnType("numeric");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Phone")
                        .HasColumnName("phone")
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.Property<int>("RegionId")
                        .HasColumnName("region_id")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnName("status")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnName("update_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("UpdateUser")
                        .HasColumnName("update_user")
                        .HasColumnType("integer");

                    b.HasKey("Id")
                        .HasName("pk_sp_drug_stores");

                    b.HasIndex("CreateUser")
                        .HasName("ix_sp_drug_stores_create_user");

                    b.HasIndex("DistrictId")
                        .HasName("ix_sp_drug_stores_district_id");

                    b.HasIndex("RegionId")
                        .HasName("ix_sp_drug_stores_region_id");

                    b.HasIndex("Status")
                        .HasName("ix_sp_drug_stores_status");

                    b.ToTable("sp_drug_stores");
                });

            modelBuilder.Entity("UniPos.Models.spLanguage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("create_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CreateUser")
                        .HasColumnName("create_user")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<int>("Status")
                        .HasColumnName("status")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnName("update_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("UpdateUser")
                        .HasColumnName("update_user")
                        .HasColumnType("integer");

                    b.HasKey("Id")
                        .HasName("pk_sp_languages");

                    b.HasIndex("CreateUser")
                        .HasName("ix_sp_languages_create_user");

                    b.HasIndex("Status")
                        .HasName("ix_sp_languages_status");

                    b.ToTable("sp_languages");
                });

            modelBuilder.Entity("UniPos.Models.spManufacturer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("CountryId")
                        .HasColumnName("country_id")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("create_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CreateUser")
                        .HasColumnName("create_user")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("character varying(255)")
                        .HasMaxLength(255);

                    b.Property<int>("Status")
                        .HasColumnName("status")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnName("update_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("UpdateUser")
                        .HasColumnName("update_user")
                        .HasColumnType("integer");

                    b.HasKey("Id")
                        .HasName("pk_sp_manufacturers");

                    b.HasIndex("CountryId")
                        .HasName("ix_sp_manufacturers_country_id");

                    b.HasIndex("CreateUser")
                        .HasName("ix_sp_manufacturers_create_user");

                    b.HasIndex("Name")
                        .HasName("ix_sp_manufacturers_name");

                    b.HasIndex("Status")
                        .HasName("ix_sp_manufacturers_status");

                    b.ToTable("sp_manufacturers");
                });

            modelBuilder.Entity("UniPos.Models.spOrderStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("create_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CreateUser")
                        .HasColumnName("create_user")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.Property<int>("Status")
                        .HasColumnName("status")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnName("update_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("UpdateUser")
                        .HasColumnName("update_user")
                        .HasColumnType("integer");

                    b.HasKey("Id")
                        .HasName("pk_sp_order_status");

                    b.HasIndex("CreateUser")
                        .HasName("ix_sp_order_status_create_user");

                    b.HasIndex("Status")
                        .HasName("ix_sp_order_status_status");

                    b.ToTable("sp_order_status");
                });

            modelBuilder.Entity("UniPos.Models.spPayment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("create_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CreateUser")
                        .HasColumnName("create_user")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<int>("Status")
                        .HasColumnName("status")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnName("update_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("UpdateUser")
                        .HasColumnName("update_user")
                        .HasColumnType("integer");

                    b.HasKey("Id")
                        .HasName("pk_sp_payments");

                    b.HasIndex("CreateUser")
                        .HasName("ix_sp_payments_create_user");

                    b.HasIndex("Status")
                        .HasName("ix_sp_payments_status");

                    b.ToTable("sp_payments");
                });

            modelBuilder.Entity("UniPos.Models.spPharmGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("create_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CreateUser")
                        .HasColumnName("create_user")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.Property<int>("Status")
                        .HasColumnName("status")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnName("update_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("UpdateUser")
                        .HasColumnName("update_user")
                        .HasColumnType("integer");

                    b.HasKey("Id")
                        .HasName("pk_sp_pharm_groups");

                    b.HasIndex("CreateUser")
                        .HasName("ix_sp_pharm_groups_create_user");

                    b.HasIndex("Status")
                        .HasName("ix_sp_pharm_groups_status");

                    b.ToTable("sp_pharm_groups");
                });

            modelBuilder.Entity("UniPos.Models.spRegion", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("id")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("create_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CreateUser")
                        .HasColumnName("create_user")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.Property<int>("Status")
                        .HasColumnName("status")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnName("update_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("UpdateUser")
                        .HasColumnName("update_user")
                        .HasColumnType("integer");

                    b.HasKey("Id")
                        .HasName("pk_sp_regions");

                    b.HasIndex("CreateUser")
                        .HasName("ix_sp_regions_create_user");

                    b.HasIndex("Status")
                        .HasName("ix_sp_regions_status");

                    b.ToTable("sp_regions");
                });

            modelBuilder.Entity("UniPos.Models.spRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("create_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CreateUser")
                        .HasColumnName("create_user")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<int>("Status")
                        .HasColumnName("status")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnName("update_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("UpdateUser")
                        .HasColumnName("update_user")
                        .HasColumnType("integer");

                    b.Property<string>("UserAccess")
                        .HasColumnName("user_access")
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("pk_sp_roles");

                    b.HasIndex("CreateUser")
                        .HasName("ix_sp_roles_create_user");

                    b.HasIndex("Status")
                        .HasName("ix_sp_roles_status");

                    b.ToTable("sp_roles");
                });

            modelBuilder.Entity("UniPos.Models.spUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("create_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CreateUser")
                        .HasColumnName("create_user")
                        .HasColumnType("integer");

                    b.Property<int>("Impartible")
                        .HasColumnName("impartible")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.Property<int>("Status")
                        .HasColumnName("status")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnName("update_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("UpdateUser")
                        .HasColumnName("update_user")
                        .HasColumnType("integer");

                    b.HasKey("Id")
                        .HasName("pk_sp_units");

                    b.HasIndex("CreateUser")
                        .HasName("ix_sp_units_create_user");

                    b.HasIndex("Status")
                        .HasName("ix_sp_units_status");

                    b.ToTable("sp_units");
                });

            modelBuilder.Entity("UniPos.Models.spUserAgent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("create_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CreateUser")
                        .HasColumnName("create_user")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<int>("Status")
                        .HasColumnName("status")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnName("update_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("UpdateUser")
                        .HasColumnName("update_user")
                        .HasColumnType("integer");

                    b.HasKey("Id")
                        .HasName("pk_sp_user_agents");

                    b.HasIndex("CreateUser")
                        .HasName("ix_sp_user_agents_create_user");

                    b.HasIndex("Status")
                        .HasName("ix_sp_user_agents_status");

                    b.ToTable("sp_user_agents");
                });

            modelBuilder.Entity("UniPos.Models.tbAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("create_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CreateUser")
                        .HasColumnName("create_user")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<int>("DistrictId")
                        .HasColumnName("district_id")
                        .HasColumnType("integer");

                    b.Property<string>("Flat")
                        .HasColumnName("flat")
                        .HasColumnType("character varying(10)")
                        .HasMaxLength(10);

                    b.Property<string>("House")
                        .HasColumnName("house")
                        .HasColumnType("character varying(10)")
                        .HasMaxLength(10);

                    b.Property<decimal>("Latitude")
                        .HasColumnName("latitude")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Longitude")
                        .HasColumnName("longitude")
                        .HasColumnType("numeric");

                    b.Property<int>("RegionId")
                        .HasColumnName("region_id")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnName("status")
                        .HasColumnType("integer");

                    b.Property<string>("Street")
                        .HasColumnName("street")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnName("update_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("UpdateUser")
                        .HasColumnName("update_user")
                        .HasColumnType("integer");

                    b.Property<string>("Waymark")
                        .HasColumnName("waymark")
                        .HasColumnType("character varying(500)")
                        .HasMaxLength(500);

                    b.HasKey("Id")
                        .HasName("pk_tb_address");

                    b.HasIndex("CreateUser")
                        .HasName("ix_tb_address_create_user");

                    b.HasIndex("DistrictId")
                        .HasName("ix_tb_address_district_id");

                    b.HasIndex("RegionId")
                        .HasName("ix_tb_address_region_id");

                    b.HasIndex("Status")
                        .HasName("ix_tb_address_status");

                    b.ToTable("tb_address");
                });

            modelBuilder.Entity("UniPos.Models.tbImport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("DrugId")
                        .HasColumnName("drug_id")
                        .HasColumnType("integer");

                    b.Property<string>("DrugName")
                        .HasColumnName("drug_name")
                        .HasColumnType("text");

                    b.Property<string>("DrugStoreId")
                        .HasColumnName("drug_store_id")
                        .HasColumnType("text");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnName("expiry_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Partya")
                        .HasColumnName("partya")
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnName("price")
                        .HasColumnType("numeric");

                    b.Property<string>("SeriesNo")
                        .HasColumnName("series_no")
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("pk_tb_imports");

                    b.ToTable("tb_imports");
                });

            modelBuilder.Entity("UniPos.Models.tbOrderDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("create_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CreateUser")
                        .HasColumnName("create_user")
                        .HasColumnType("integer");

                    b.Property<decimal>("Price")
                        .HasColumnName("price")
                        .HasColumnType("numeric");

                    b.Property<int>("ProductId")
                        .HasColumnName("product_id")
                        .HasColumnType("integer");

                    b.Property<int>("Qty")
                        .HasColumnName("qty")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnName("status")
                        .HasColumnType("integer");

                    b.Property<decimal>("TotalSum")
                        .HasColumnName("total_sum")
                        .HasColumnType("numeric");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnName("update_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("UpdateUser")
                        .HasColumnName("update_user")
                        .HasColumnType("integer");

                    b.Property<int?>("tbOrderHeaderId")
                        .HasColumnName("tb_order_header_id")
                        .HasColumnType("integer");

                    b.HasKey("Id")
                        .HasName("pk_tb_order_details");

                    b.HasIndex("CreateUser")
                        .HasName("ix_tb_order_details_create_user");

                    b.HasIndex("ProductId")
                        .HasName("ix_tb_order_details_product_id");

                    b.HasIndex("Status")
                        .HasName("ix_tb_order_details_status");

                    b.HasIndex("tbOrderHeaderId")
                        .HasName("ix_tb_order_details_tb_order_header_id");

                    b.ToTable("tb_order_details");
                });

            modelBuilder.Entity("UniPos.Models.tbOrderHeader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("AddressId")
                        .HasColumnName("address_id")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("create_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CreateUser")
                        .HasColumnName("create_user")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DeliveryTime")
                        .HasColumnName("delivery_time")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("DeliveryTypeId")
                        .HasColumnName("delivery_type_id")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.Property<int>("DrugStoreId")
                        .HasColumnName("drug_store_id")
                        .HasColumnType("integer");

                    b.Property<int>("ItemQty")
                        .HasColumnName("item_qty")
                        .HasColumnType("integer");

                    b.Property<int>("OrderStatusId")
                        .HasColumnName("order_status_id")
                        .HasColumnType("integer");

                    b.Property<int>("PaymentId")
                        .HasColumnName("payment_id")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnName("status")
                        .HasColumnType("integer");

                    b.Property<decimal>("Summa")
                        .HasColumnName("summa")
                        .HasColumnType("numeric");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnName("update_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("UpdateUser")
                        .HasColumnName("update_user")
                        .HasColumnType("integer");

                    b.Property<int>("UserAgentId")
                        .HasColumnName("user_agent_id")
                        .HasColumnType("integer");

                    b.HasKey("Id")
                        .HasName("pk_tb_orders");

                    b.HasIndex("AddressId")
                        .HasName("ix_tb_orders_address_id");

                    b.HasIndex("CreateUser")
                        .HasName("ix_tb_orders_create_user");

                    b.HasIndex("DeliveryTypeId")
                        .HasName("ix_tb_orders_delivery_type_id");

                    b.HasIndex("DrugStoreId")
                        .HasName("ix_tb_orders_drug_store_id");

                    b.HasIndex("OrderStatusId")
                        .HasName("ix_tb_orders_order_status_id");

                    b.HasIndex("PaymentId")
                        .HasName("ix_tb_orders_payment_id");

                    b.HasIndex("Status")
                        .HasName("ix_tb_orders_status");

                    b.HasIndex("UserAgentId")
                        .HasName("ix_tb_orders_user_agent_id");

                    b.ToTable("tb_orders");
                });

            modelBuilder.Entity("UniPos.Models.tbProductDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<decimal?>("BasePrice")
                        .HasColumnName("base_price")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("create_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CreateUser")
                        .HasColumnName("create_user")
                        .HasColumnType("integer");

                    b.Property<int>("CurQty")
                        .IsConcurrencyToken()
                        .HasColumnName("cur_qty")
                        .HasColumnType("integer");

                    b.Property<int>("DrugId")
                        .HasColumnName("drug_id")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnName("expiry_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("ExtraCharge")
                        .HasColumnName("extra_charge")
                        .HasColumnType("numeric");

                    b.Property<decimal>("IncomingPrice")
                        .HasColumnName("incoming_price")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Price")
                        .HasColumnName("price")
                        .HasColumnType("numeric");

                    b.Property<int>("ProductHeaderId")
                        .HasColumnName("product_header_id")
                        .HasColumnType("integer");

                    b.Property<int>("Qty")
                        .HasColumnName("qty")
                        .HasColumnType("integer");

                    b.Property<string>("SeriesNo")
                        .HasColumnName("series_no")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<int>("Status")
                        .HasColumnName("status")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnName("update_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("UpdateUser")
                        .HasColumnName("update_user")
                        .HasColumnType("integer");

                    b.Property<decimal>("Vat")
                        .HasColumnName("vat")
                        .HasColumnType("numeric");

                    b.HasKey("Id")
                        .HasName("pk_tb_product_details");

                    b.HasIndex("CreateUser")
                        .HasName("ix_tb_product_details_create_user");

                    b.HasIndex("CurQty")
                        .HasName("ix_tb_product_details_cur_qty");

                    b.HasIndex("DrugId")
                        .HasName("ix_tb_product_details_drug_id");

                    b.HasIndex("ExpiryDate")
                        .HasName("ix_tb_product_details_expiry_date");

                    b.HasIndex("ProductHeaderId")
                        .HasName("ix_tb_product_details_product_header_id");

                    b.HasIndex("Status")
                        .HasName("ix_tb_product_details_status");

                    b.ToTable("tb_product_details");
                });

            modelBuilder.Entity("UniPos.Models.tbProductHeader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("create_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CreateUser")
                        .HasColumnName("create_user")
                        .HasColumnType("integer");

                    b.Property<string>("DocumentNo")
                        .HasColumnName("document_no")
                        .HasColumnType("character varying(20)")
                        .HasMaxLength(20);

                    b.Property<int>("Status")
                        .HasColumnName("status")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnName("update_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("UpdateUser")
                        .HasColumnName("update_user")
                        .HasColumnType("integer");

                    b.HasKey("Id")
                        .HasName("pk_tb_product_headers");

                    b.HasIndex("CreateUser")
                        .HasName("ix_tb_product_headers_create_user");

                    b.HasIndex("Status")
                        .HasName("ix_tb_product_headers_status");

                    b.ToTable("tb_product_headers");
                });

            modelBuilder.Entity("UniPos.Models.tbSetup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("create_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CreateUser")
                        .HasColumnName("create_user")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnName("status")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnName("update_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("UpdateUser")
                        .HasColumnName("update_user")
                        .HasColumnType("integer");

                    b.HasKey("Id")
                        .HasName("pk_tb_setups");

                    b.HasIndex("CreateUser")
                        .HasName("ix_tb_setups_create_user");

                    b.HasIndex("Status")
                        .HasName("ix_tb_setups_status");

                    b.ToTable("tb_setups");
                });

            modelBuilder.Entity("UniPos.Models.tbUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("create_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CreateUser")
                        .HasColumnName("create_user")
                        .HasColumnType("integer");

                    b.Property<string>("FirstName")
                        .HasColumnName("first_name")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("LastName")
                        .HasColumnName("last_name")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnName("password")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Phone")
                        .HasColumnName("phone")
                        .HasColumnType("character varying(20)")
                        .HasMaxLength(20);

                    b.Property<int>("RoleId")
                        .HasColumnName("role_id")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnName("status")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnName("update_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("UpdateUser")
                        .HasColumnName("update_user")
                        .HasColumnType("integer");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnName("username")
                        .HasColumnType("character varying(20)")
                        .HasMaxLength(20);

                    b.HasKey("Id")
                        .HasName("pk_tb_user");

                    b.HasIndex("CreateUser")
                        .HasName("ix_tb_user_create_user");

                    b.HasIndex("RoleId")
                        .HasName("ix_tb_user_role_id");

                    b.HasIndex("Status")
                        .HasName("ix_tb_user_status");

                    b.ToTable("tb_user");
                });

            modelBuilder.Entity("UniPos.Models.spDistrict", b =>
                {
                    b.HasOne("UniPos.Models.spRegion", "Region")
                        .WithMany("Districts")
                        .HasForeignKey("RegionId")
                        .HasConstraintName("fk_sp_districts_sp_regions_region_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UniPos.Models.spDrug", b =>
                {
                    b.HasOne("UniPos.Models.spDrugCategory", "DrugCategory")
                        .WithMany()
                        .HasForeignKey("DrugCategoryId")
                        .HasConstraintName("fk_sp_drugs_sp_drug_categories_drug_category_id");

                    b.HasOne("UniPos.Models.spManufacturer", "Manufacturer")
                        .WithMany()
                        .HasForeignKey("ManufacturerId")
                        .HasConstraintName("fk_sp_drugs_sp_manufacturers_manufacturer_id");

                    b.HasOne("UniPos.Models.spPharmGroup", "PharmGroup")
                        .WithMany()
                        .HasForeignKey("PharmGroupId")
                        .HasConstraintName("fk_sp_drugs_sp_pharm_groups_pharm_group_id");

                    b.HasOne("UniPos.Models.spUnit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .HasConstraintName("fk_sp_drugs_sp_units_unit_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UniPos.Models.spDrugStore", b =>
                {
                    b.HasOne("UniPos.Models.spDistrict", "District")
                        .WithMany()
                        .HasForeignKey("DistrictId")
                        .HasConstraintName("fk_sp_drug_stores_sp_districts_district_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniPos.Models.spRegion", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .HasConstraintName("fk_sp_drug_stores_sp_regions_region_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UniPos.Models.spManufacturer", b =>
                {
                    b.HasOne("UniPos.Models.spCountry", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .HasConstraintName("fk_sp_manufacturers_sp_countries_country_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UniPos.Models.tbAddress", b =>
                {
                    b.HasOne("UniPos.Models.spDistrict", "District")
                        .WithMany()
                        .HasForeignKey("DistrictId")
                        .HasConstraintName("fk_tb_address_sp_districts_district_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniPos.Models.spRegion", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .HasConstraintName("fk_tb_address_sp_regions_region_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UniPos.Models.tbOrderDetails", b =>
                {
                    b.HasOne("UniPos.Models.tbProductDetails", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .HasConstraintName("fk_tb_order_details_tb_product_details_product_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniPos.Models.tbOrderHeader", null)
                        .WithMany("OrderDetails")
                        .HasForeignKey("tbOrderHeaderId")
                        .HasConstraintName("fk_tb_order_details_tb_orders_tb_order_header_id");
                });

            modelBuilder.Entity("UniPos.Models.tbOrderHeader", b =>
                {
                    b.HasOne("UniPos.Models.tbAddress", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .HasConstraintName("fk_tb_orders_tb_address_address_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniPos.Models.spDeliveryType", "DeliveryType")
                        .WithMany()
                        .HasForeignKey("DeliveryTypeId")
                        .HasConstraintName("fk_tb_orders_sp_delivery_types_delivery_type_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniPos.Models.spDrugStore", "DrugStore")
                        .WithMany()
                        .HasForeignKey("DrugStoreId")
                        .HasConstraintName("fk_tb_orders_sp_drug_stores_drug_store_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniPos.Models.spOrderStatus", "OrderStatus")
                        .WithMany()
                        .HasForeignKey("OrderStatusId")
                        .HasConstraintName("fk_tb_orders_sp_order_status_order_status_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniPos.Models.spPayment", "Payment")
                        .WithMany()
                        .HasForeignKey("PaymentId")
                        .HasConstraintName("fk_tb_orders_sp_payments_payment_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniPos.Models.spUserAgent", "UserAgent")
                        .WithMany()
                        .HasForeignKey("UserAgentId")
                        .HasConstraintName("fk_tb_orders_sp_user_agents_user_agent_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UniPos.Models.tbProductDetails", b =>
                {
                    b.HasOne("UniPos.Models.spDrug", "Drug")
                        .WithMany()
                        .HasForeignKey("DrugId")
                        .HasConstraintName("fk_tb_product_details_sp_drugs_drug_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniPos.Models.tbProductHeader", "ProductHeader")
                        .WithMany()
                        .HasForeignKey("ProductHeaderId")
                        .HasConstraintName("fk_tb_product_details_tb_product_headers_product_header_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UniPos.Models.tbUser", b =>
                {
                    b.HasOne("UniPos.Models.spRole", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .HasConstraintName("fk_tb_user_sp_roles_role_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
