// <auto-generated />
using System;
using Apteka.Postgres;
using Apteka.Postgres.Utils;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using NpgsqlTypes;

namespace Apteka.Postgres.Migrations
{
    [DbContext(typeof(AptekaPostgresDbContext))]
    partial class AptekaPostgresDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Apteka.Postgres.spAccessLists", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("id")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("create_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid>("CreateUser")
                        .HasColumnName("create_user")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<int>("Send")
                        .HasColumnName("send")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasColumnType("integer")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnName("update_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid?>("UpdateUser")
                        .HasColumnName("update_user")
                        .HasColumnType("uuid");

                    b.HasKey("Id")
                        .HasName("pk_sp_access_lists");

                    b.HasIndex("CreateDate")
                        .HasName("IX_CreateDate");

                    b.HasIndex("Status")
                        .HasName("IX_Status");

                    b.HasIndex("UpdateDate")
                        .HasName("IX_UpdateDate");

                    b.ToTable("sp_access_lists");
                });

            modelBuilder.Entity("Apteka.Postgres.spCountries", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("id")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("create_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid>("CreateUser")
                        .HasColumnName("create_user")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.Property<int>("Send")
                        .HasColumnName("send")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasColumnType("integer")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnName("update_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid?>("UpdateUser")
                        .HasColumnName("update_user")
                        .HasColumnType("uuid");

                    b.HasKey("Id")
                        .HasName("pk_sp_countries");

                    b.HasIndex("CreateDate")
                        .HasName("IX_CreateDate");

                    b.HasIndex("Status")
                        .HasName("IX_Status");

                    b.HasIndex("UpdateDate")
                        .HasName("IX_UpdateDate");

                    b.ToTable("sp_countries");
                });

            modelBuilder.Entity("Apteka.Postgres.spDiscountTypes", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnName("id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("create_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid>("CreateUser")
                        .HasColumnName("create_user")
                        .HasColumnType("uuid");

                    b.Property<string>("DpInfo")
                        .HasColumnName("dp_info")
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.Property<int>("Send")
                        .HasColumnName("send")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasColumnType("integer")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnName("update_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid?>("UpdateUser")
                        .HasColumnName("update_user")
                        .HasColumnType("uuid");

                    b.HasKey("Id")
                        .HasName("pk_sp_discount_types");

                    b.HasIndex("CreateDate")
                        .HasName("IX_CreateDate");

                    b.HasIndex("Status")
                        .HasName("IX_Status");

                    b.HasIndex("UpdateDate")
                        .HasName("IX_UpdateDate");

                    b.ToTable("sp_discount_types");
                });

            modelBuilder.Entity("Apteka.Postgres.spDistributors", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnName("id")
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .HasColumnName("address")
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.Property<string>("BankName")
                        .HasColumnName("bank_name")
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("create_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid>("CreateUser")
                        .HasColumnName("create_user")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("DistrictId")
                        .HasColumnName("district_id")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .HasColumnName("email")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Fax")
                        .HasColumnName("fax")
                        .HasColumnType("character varying(20)")
                        .HasMaxLength(20);

                    b.Property<string>("INN")
                        .HasColumnName("inn")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Location")
                        .HasColumnName("location")
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.Property<string>("MFO")
                        .HasColumnName("mfo")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("OKONH")
                        .HasColumnName("okonh")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("OrganizationName")
                        .IsRequired()
                        .HasColumnName("organization_name")
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.Property<string>("PersonName")
                        .HasColumnName("person_name")
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Phone")
                        .HasColumnName("phone")
                        .HasColumnType("character varying(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("RegionId")
                        .HasColumnName("region_id")
                        .HasColumnType("integer");

                    b.Property<int>("Send")
                        .HasColumnName("send")
                        .HasColumnType("integer");

                    b.Property<int?>("ServerId")
                        .HasColumnName("server_id")
                        .HasColumnType("integer");

                    b.Property<string>("SettlementAccount")
                        .HasColumnName("settlement_account")
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasColumnType("integer")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnName("update_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid?>("UpdateUser")
                        .HasColumnName("update_user")
                        .HasColumnType("uuid");

                    b.HasKey("Id")
                        .HasName("pk_sp_distributors");

                    b.HasIndex("CreateDate")
                        .HasName("IX_CreateDate");

                    b.HasIndex("Status")
                        .HasName("IX_Status");

                    b.HasIndex("UpdateDate")
                        .HasName("IX_UpdateDate");

                    b.ToTable("sp_distributors");
                });

            modelBuilder.Entity("Apteka.Postgres.spDistricts", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("id")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("create_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid>("CreateUser")
                        .HasColumnName("create_user")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.Property<int>("RegionId")
                        .HasColumnName("region_id")
                        .HasColumnType("integer");

                    b.Property<int>("Send")
                        .HasColumnName("send")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasColumnType("integer")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnName("update_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid?>("UpdateUser")
                        .HasColumnName("update_user")
                        .HasColumnType("uuid");

                    b.HasKey("Id")
                        .HasName("pk_sp_districts");

                    b.HasIndex("CreateDate")
                        .HasName("IX_CreateDate");

                    b.HasIndex("RegionId")
                        .HasName("IX_RegionId");

                    b.HasIndex("Status")
                        .HasName("IX_Status");

                    b.HasIndex("UpdateDate")
                        .HasName("IX_UpdateDate");

                    b.ToTable("sp_districts");
                });

            modelBuilder.Entity("Apteka.Postgres.spDrugAdditionalInfoes", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("id")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("create_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid>("CreateUser")
                        .HasColumnName("create_user")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.Property<int>("Send")
                        .HasColumnName("send")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasColumnType("integer")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnName("update_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid?>("UpdateUser")
                        .HasColumnName("update_user")
                        .HasColumnType("uuid");

                    b.HasKey("Id")
                        .HasName("pk_sp_drug_additional_infoes");

                    b.HasIndex("CreateDate")
                        .HasName("IX_CreateDate");

                    b.HasIndex("Status")
                        .HasName("IX_Status");

                    b.HasIndex("UpdateDate")
                        .HasName("IX_UpdateDate");

                    b.ToTable("sp_drug_additional_infoes");
                });

            modelBuilder.Entity("Apteka.Postgres.spDrugCategories", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnName("id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("create_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid>("CreateUser")
                        .HasColumnName("create_user")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.Property<int>("Send")
                        .HasColumnName("send")
                        .HasColumnType("integer");

                    b.Property<int?>("ServerId")
                        .HasColumnName("server_id")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasColumnType("integer")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnName("update_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid?>("UpdateUser")
                        .HasColumnName("update_user")
                        .HasColumnType("uuid");

                    b.HasKey("Id")
                        .HasName("pk_sp_drug_categories");

                    b.HasIndex("CreateDate")
                        .HasName("IX_CreateDate");

                    b.HasIndex("Status")
                        .HasName("IX_Status");

                    b.HasIndex("UpdateDate")
                        .HasName("IX_UpdateDate");

                    b.ToTable("sp_drug_categories");
                });

            modelBuilder.Entity("Apteka.Postgres.spDrugRecomendations", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnName("id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("create_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid>("CreateUser")
                        .HasColumnName("create_user")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.Property<int>("Send")
                        .HasColumnName("send")
                        .HasColumnType("integer");

                    b.Property<int>("ServerId")
                        .HasColumnName("server_id")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasColumnType("integer")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnName("update_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid?>("UpdateUser")
                        .HasColumnName("update_user")
                        .HasColumnType("uuid");

                    b.HasKey("Id")
                        .HasName("pk_sp_drug_recomendations");

                    b.HasIndex("CreateDate")
                        .HasName("IX_CreateDate");

                    b.HasIndex("Status")
                        .HasName("IX_Status");

                    b.HasIndex("UpdateDate")
                        .HasName("IX_UpdateDate");

                    b.ToTable("sp_drug_recomendations");
                });

            modelBuilder.Entity("Apteka.Postgres.spDrugStores", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnName("id")
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .HasColumnName("address")
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.Property<string>("AddressCheck")
                        .HasColumnName("address_check")
                        .HasColumnType("character varying(60)")
                        .HasMaxLength(60);

                    b.Property<string>("BankName")
                        .HasColumnName("bank_name")
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("create_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid>("CreateUser")
                        .HasColumnName("create_user")
                        .HasColumnType("uuid");

                    b.Property<int>("DistrictId")
                        .HasColumnName("district_id")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .HasColumnName("email")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<decimal>("ExtraChargeDefault")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("extra_charge_default")
                        .HasColumnType("decimal(18, 2)")
                        .HasDefaultValueSql("((5))");

                    b.Property<string>("Fax")
                        .HasColumnName("fax")
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.Property<string>("INN")
                        .HasColumnName("inn")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("MFO")
                        .HasColumnName("mfo")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.Property<string>("OKONH")
                        .HasColumnName("okonh")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Phone")
                        .HasColumnName("phone")
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.Property<int>("RegionId")
                        .HasColumnName("region_id")
                        .HasColumnType("integer");

                    b.Property<int>("Send")
                        .HasColumnName("send")
                        .HasColumnType("integer");

                    b.Property<int?>("ServerId")
                        .HasColumnName("server_id")
                        .HasColumnType("integer");

                    b.Property<string>("SettlementAccount")
                        .HasColumnName("settlement_account")
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasColumnType("integer")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnName("update_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid?>("UpdateUser")
                        .HasColumnName("update_user")
                        .HasColumnType("uuid");

                    b.HasKey("Id")
                        .HasName("pk_sp_drug_stores");

                    b.HasIndex("CreateDate")
                        .HasName("IX_CreateDate");

                    b.HasIndex("DistrictId")
                        .HasName("IX_DistrictId");

                    b.HasIndex("RegionId")
                        .HasName("IX_RegionId");

                    b.HasIndex("Status")
                        .HasName("IX_Status");

                    b.HasIndex("UpdateDate")
                        .HasName("IX_UpdateDate");

                    b.ToTable("sp_drug_stores");
                });

            modelBuilder.Entity("Apteka.Postgres.spDrugs", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnName("id")
                        .HasColumnType("uuid");

                    b.Property<string>("Barcode")
                        .HasColumnName("barcode")
                        .HasColumnType("character varying(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("create_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid>("CreateUser")
                        .HasColumnName("create_user")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnName("description")
                        .HasColumnType("character varying(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Dose")
                        .HasColumnName("dose")
                        .HasColumnType("character varying(255)")
                        .HasMaxLength(255);

                    b.Property<Guid?>("DrugCategoryId")
                        .HasColumnName("drug_category_id")
                        .HasColumnType("uuid");

                    b.Property<string>("DrugRecomendation")
                        .HasColumnName("drug_recomendation")
                        .HasColumnType("character varying(2000)")
                        .HasMaxLength(2000);

                    b.Property<string>("InternationalName")
                        .HasColumnName("international_name")
                        .HasColumnType("character varying(255)")
                        .HasMaxLength(255);

                    b.Property<Guid?>("ManufacturerId")
                        .HasColumnName("manufacturer_id")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("character varying(255)")
                        .HasMaxLength(255);

                    b.Property<jbDrugNameParsed>("NameParsed")
                        .HasColumnName("name_parsed")
                        .HasColumnType("jsonb");

                    b.Property<Guid?>("PharmGroupId")
                        .HasColumnName("pharm_group_id")
                        .HasColumnType("uuid");

                    b.Property<string>("Photo")
                        .HasColumnName("photo")
                        .HasColumnType("character varying(255)")
                        .HasMaxLength(255);

                    b.Property<int>("Piece")
                        .HasColumnName("piece")
                        .HasColumnType("integer");

                    b.Property<Guid?>("RealId")
                        .HasColumnName("real_id")
                        .HasColumnType("uuid");

                    b.Property<NpgsqlTsVector>("SearchVector")
                        .HasColumnName("search_vector")
                        .HasColumnType("tsvector");

                    b.Property<int>("Send")
                        .HasColumnName("send")
                        .HasColumnType("integer");

                    b.Property<int?>("ServerId")
                        .HasColumnName("server_id")
                        .HasColumnType("integer");

                    b.Property<int?>("Special")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("special")
                        .HasColumnType("integer")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasColumnType("integer")
                        .HasDefaultValueSql("((1))");

                    b.Property<Guid>("UnitId")
                        .HasColumnName("unit_id")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnName("update_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid?>("UpdateUser")
                        .HasColumnName("update_user")
                        .HasColumnType("uuid");

                    b.Property<decimal>("VatRate")
                        .HasColumnName("vat_rate")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id")
                        .HasName("pk_sp_drugs");

                    b.HasIndex("CreateDate")
                        .HasName("IX_CreateDate");

                    b.HasIndex("Description")
                        .HasName("IX_Description");

                    b.HasIndex("DrugCategoryId")
                        .HasName("IX_DrugCategoryId");

                    b.HasIndex("ManufacturerId")
                        .HasName("IX_ManufacturerId");

                    b.HasIndex("PharmGroupId")
                        .HasName("IX_PharmGroupId");

                    b.HasIndex("ServerId")
                        .HasName("IX_ServerId");

                    b.HasIndex("Status")
                        .HasName("IX_Status");

                    b.HasIndex("UnitId")
                        .HasName("IX_UnitId");

                    b.HasIndex("UpdateDate")
                        .HasName("IX_UpdateDate");

                    b.ToTable("sp_drugs");
                });

            modelBuilder.Entity("Apteka.Postgres.spInsurances", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnName("id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("create_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid>("CreateUser")
                        .HasColumnName("create_user")
                        .HasColumnType("uuid");

                    b.Property<string>("DpInfo")
                        .HasColumnName("dp_info")
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.Property<int>("Send")
                        .HasColumnName("send")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasColumnType("integer")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnName("update_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid?>("UpdateUser")
                        .HasColumnName("update_user")
                        .HasColumnType("uuid");

                    b.HasKey("Id")
                        .HasName("pk_sp_insurances");

                    b.HasIndex("CreateDate")
                        .HasName("IX_CreateDate");

                    b.HasIndex("Status")
                        .HasName("IX_Status");

                    b.HasIndex("UpdateDate")
                        .HasName("IX_UpdateDate");

                    b.ToTable("sp_insurances");
                });

            modelBuilder.Entity("Apteka.Postgres.spManufacturers", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnName("id")
                        .HasColumnType("uuid");

                    b.Property<int>("CountryId")
                        .HasColumnName("country_id")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("create_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid>("CreateUser")
                        .HasColumnName("create_user")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("character varying(255)")
                        .HasMaxLength(255);

                    b.Property<Guid?>("RealId")
                        .HasColumnName("real_id")
                        .HasColumnType("uuid");

                    b.Property<int>("Send")
                        .HasColumnName("send")
                        .HasColumnType("integer");

                    b.Property<int?>("ServerId")
                        .HasColumnName("server_id")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasColumnType("integer")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnName("update_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid?>("UpdateUser")
                        .HasColumnName("update_user")
                        .HasColumnType("uuid");

                    b.HasKey("Id")
                        .HasName("pk_sp_manufacturers");

                    b.HasIndex("CountryId")
                        .HasName("IX_CountryId");

                    b.HasIndex("CreateDate")
                        .HasName("IX_CreateDate");

                    b.HasIndex("Name")
                        .HasName("IX_Name");

                    b.HasIndex("Status")
                        .HasName("IX_Status");

                    b.HasIndex("UpdateDate")
                        .HasName("IX_UpdateDate");

                    b.ToTable("sp_manufacturers");
                });

            modelBuilder.Entity("Apteka.Postgres.spOnlinePayments", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("id")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("create_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid>("CreateUser")
                        .HasColumnName("create_user")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.Property<int>("Send")
                        .HasColumnName("send")
                        .HasColumnType("integer");

                    b.Property<int?>("ServerId")
                        .HasColumnName("server_id")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasColumnType("integer")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnName("update_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid?>("UpdateUser")
                        .HasColumnName("update_user")
                        .HasColumnType("uuid");

                    b.HasKey("Id")
                        .HasName("pk_sp_online_payments");

                    b.HasIndex("CreateDate")
                        .HasName("IX_CreateDate");

                    b.HasIndex("Status")
                        .HasName("IX_Status");

                    b.HasIndex("UpdateDate")
                        .HasName("IX_UpdateDate");

                    b.ToTable("sp_online_payments");
                });

            modelBuilder.Entity("Apteka.Postgres.spOperationTypes", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("id")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("create_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid>("CreateUser")
                        .HasColumnName("create_user")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.Property<int>("Send")
                        .HasColumnName("send")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasColumnType("integer")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnName("update_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid?>("UpdateUser")
                        .HasColumnName("update_user")
                        .HasColumnType("uuid");

                    b.HasKey("Id")
                        .HasName("pk_sp_operation_types");

                    b.HasIndex("CreateDate")
                        .HasName("IX_CreateDate");

                    b.HasIndex("Status")
                        .HasName("IX_Status");

                    b.HasIndex("UpdateDate")
                        .HasName("IX_UpdateDate");

                    b.ToTable("sp_operation_types");
                });

            modelBuilder.Entity("Apteka.Postgres.spOrderStatus", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("id")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("create_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid>("CreateUser")
                        .HasColumnName("create_user")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.Property<int>("Send")
                        .HasColumnName("send")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasColumnType("integer")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnName("update_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid?>("UpdateUser")
                        .HasColumnName("update_user")
                        .HasColumnType("uuid");

                    b.HasKey("Id")
                        .HasName("pk_sp_order_status");

                    b.HasIndex("CreateDate")
                        .HasName("IX_CreateDate");

                    b.HasIndex("Status")
                        .HasName("IX_Status");

                    b.HasIndex("UpdateDate")
                        .HasName("IX_UpdateDate");

                    b.ToTable("sp_order_status");
                });

            modelBuilder.Entity("Apteka.Postgres.spPharmGroups", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnName("id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("create_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid>("CreateUser")
                        .HasColumnName("create_user")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.Property<int>("Send")
                        .HasColumnName("send")
                        .HasColumnType("integer");

                    b.Property<int?>("ServerId")
                        .HasColumnName("server_id")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasColumnType("integer")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnName("update_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid?>("UpdateUser")
                        .HasColumnName("update_user")
                        .HasColumnType("uuid");

                    b.HasKey("Id")
                        .HasName("pk_sp_pharm_groups");

                    b.HasIndex("CreateDate")
                        .HasName("IX_CreateDate");

                    b.HasIndex("Status")
                        .HasName("IX_Status");

                    b.HasIndex("UpdateDate")
                        .HasName("IX_UpdateDate");

                    b.ToTable("sp_pharm_groups");
                });

            modelBuilder.Entity("Apteka.Postgres.spRegions", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("id")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("create_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid>("CreateUser")
                        .HasColumnName("create_user")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.Property<int>("Send")
                        .HasColumnName("send")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasColumnType("integer")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnName("update_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid?>("UpdateUser")
                        .HasColumnName("update_user")
                        .HasColumnType("uuid");

                    b.HasKey("Id")
                        .HasName("pk_sp_regions");

                    b.HasIndex("CreateDate")
                        .HasName("IX_CreateDate");

                    b.HasIndex("Status")
                        .HasName("IX_Status");

                    b.HasIndex("UpdateDate")
                        .HasName("IX_UpdateDate");

                    b.ToTable("sp_regions");
                });

            modelBuilder.Entity("Apteka.Postgres.spRoles", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnName("id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("create_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid>("CreateUser")
                        .HasColumnName("create_user")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<int>("Send")
                        .HasColumnName("send")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasColumnType("integer")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnName("update_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid?>("UpdateUser")
                        .HasColumnName("update_user")
                        .HasColumnType("uuid");

                    b.Property<string>("UserAccess")
                        .HasColumnName("user_access")
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("pk_sp_roles");

                    b.HasIndex("CreateDate")
                        .HasName("IX_CreateDate");

                    b.HasIndex("Status")
                        .HasName("IX_Status");

                    b.HasIndex("UpdateDate")
                        .HasName("IX_UpdateDate");

                    b.ToTable("sp_roles");
                });

            modelBuilder.Entity("Apteka.Postgres.spStatus", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("id")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("create_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid>("CreateUser")
                        .HasColumnName("create_user")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.Property<int>("Send")
                        .HasColumnName("send")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasColumnType("integer")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnName("update_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid?>("UpdateUser")
                        .HasColumnName("update_user")
                        .HasColumnType("uuid");

                    b.HasKey("Id")
                        .HasName("pk_sp_status");

                    b.HasIndex("CreateDate")
                        .HasName("IX_CreateDate");

                    b.HasIndex("Status")
                        .HasName("IX_Status");

                    b.HasIndex("UpdateDate")
                        .HasName("IX_UpdateDate");

                    b.ToTable("sp_status");
                });

            modelBuilder.Entity("Apteka.Postgres.spTableInfoes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Json")
                        .HasColumnName("json")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnName("update_date")
                        .HasColumnType("timestamp");

                    b.Property<long>("Version")
                        .HasColumnName("version")
                        .HasColumnType("bigint");

                    b.HasKey("Id")
                        .HasName("pk_sp_table_infoes");

                    b.ToTable("sp_table_infoes");
                });

            modelBuilder.Entity("Apteka.Postgres.spTypeOfPayments", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("id")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("create_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid>("CreateUser")
                        .HasColumnName("create_user")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<int>("Send")
                        .HasColumnName("send")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasColumnType("integer")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnName("update_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid?>("UpdateUser")
                        .HasColumnName("update_user")
                        .HasColumnType("uuid");

                    b.HasKey("Id")
                        .HasName("pk_sp_type_of_payments");

                    b.HasIndex("CreateDate")
                        .HasName("IX_CreateDate");

                    b.HasIndex("Status")
                        .HasName("IX_Status");

                    b.HasIndex("UpdateDate")
                        .HasName("IX_UpdateDate");

                    b.ToTable("sp_type_of_payments");
                });

            modelBuilder.Entity("Apteka.Postgres.spUnits", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnName("id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("create_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid>("CreateUser")
                        .HasColumnName("create_user")
                        .HasColumnType("uuid");

                    b.Property<int>("Impartible")
                        .HasColumnName("impartible")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.Property<int>("Send")
                        .HasColumnName("send")
                        .HasColumnType("integer");

                    b.Property<int?>("ServerId")
                        .HasColumnName("server_id")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasColumnType("integer")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnName("update_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid?>("UpdateUser")
                        .HasColumnName("update_user")
                        .HasColumnType("uuid");

                    b.HasKey("Id")
                        .HasName("pk_sp_units");

                    b.HasIndex("CreateDate")
                        .HasName("IX_CreateDate");

                    b.HasIndex("Status")
                        .HasName("IX_Status");

                    b.HasIndex("UpdateDate")
                        .HasName("IX_UpdateDate");

                    b.ToTable("sp_units");
                });

            modelBuilder.Entity("Apteka.Postgres.tbBuyOnCredits", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnName("id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("create_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid>("CreateUser")
                        .HasColumnName("create_user")
                        .HasColumnType("uuid");

                    b.Property<decimal>("CreditSumma")
                        .HasColumnName("credit_summa")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("CurCreditSumma")
                        .HasColumnName("cur_credit_summa")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CustomerId")
                        .HasColumnName("customer_id")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.Property<Guid>("DocId")
                        .HasColumnName("doc_id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("DrugStoreId")
                        .HasColumnName("drug_store_id")
                        .HasColumnType("uuid");

                    b.Property<int>("Send")
                        .HasColumnName("send")
                        .HasColumnType("integer");

                    b.Property<int?>("ServerId")
                        .HasColumnName("server_id")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasColumnType("integer")
                        .HasDefaultValueSql("((1))");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnName("total_amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnName("update_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid?>("UpdateUser")
                        .HasColumnName("update_user")
                        .HasColumnType("uuid");

                    b.HasKey("Id")
                        .HasName("pk_tb_buy_on_credits");

                    b.HasIndex("CreateDate")
                        .HasName("IX_CreateDate");

                    b.HasIndex("Status")
                        .HasName("IX_Status");

                    b.HasIndex("UpdateDate")
                        .HasName("IX_UpdateDate");

                    b.ToTable("tb_buy_on_credits");
                });

            modelBuilder.Entity("Apteka.Postgres.tbCards", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnName("id")
                        .HasColumnType("uuid");

                    b.Property<string>("CardNo")
                        .IsRequired()
                        .HasColumnName("card_no")
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("create_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid>("CreateUser")
                        .HasColumnName("create_user")
                        .HasColumnType("uuid");

                    b.Property<Guid>("CustomerId")
                        .HasColumnName("customer_id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("DiscountId")
                        .HasColumnName("discount_id")
                        .HasColumnType("uuid");

                    b.Property<string>("DpInfo")
                        .HasColumnName("dp_info")
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.Property<Guid>("DrugStoreId")
                        .HasColumnName("drug_store_id")
                        .HasColumnType("uuid");

                    b.Property<int>("Send")
                        .HasColumnName("send")
                        .HasColumnType("integer");

                    b.Property<int?>("ServerId")
                        .HasColumnName("server_id")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasColumnType("integer")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnName("update_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid?>("UpdateUser")
                        .HasColumnName("update_user")
                        .HasColumnType("uuid");

                    b.HasKey("Id")
                        .HasName("pk_tb_cards");

                    b.HasIndex("CreateDate")
                        .HasName("IX_CreateDate");

                    b.HasIndex("CustomerId")
                        .HasName("IX_CustomerId");

                    b.HasIndex("DiscountId")
                        .HasName("IX_DiscountId");

                    b.HasIndex("Status")
                        .HasName("IX_Status");

                    b.HasIndex("UpdateDate")
                        .HasName("IX_UpdateDate");

                    b.ToTable("tb_cards");
                });

            modelBuilder.Entity("Apteka.Postgres.tbCashExpenses", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnName("id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("create_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid>("CreateUser")
                        .HasColumnName("create_user")
                        .HasColumnType("uuid");

                    b.Property<string>("DpInfo")
                        .HasColumnName("dp_info")
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.Property<Guid>("DrugStoreId")
                        .HasColumnName("drug_store_id")
                        .HasColumnType("uuid");

                    b.Property<int>("Send")
                        .HasColumnName("send")
                        .HasColumnType("integer");

                    b.Property<int?>("ServerId")
                        .HasColumnName("server_id")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasColumnType("integer")
                        .HasDefaultValueSql("((1))");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnName("total_amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnName("update_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid?>("UpdateUser")
                        .HasColumnName("update_user")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnName("user_id")
                        .HasColumnType("uuid");

                    b.HasKey("Id")
                        .HasName("pk_tb_cash_expenses");

                    b.HasIndex("CreateDate")
                        .HasName("IX_CreateDate");

                    b.HasIndex("Status")
                        .HasName("IX_Status");

                    b.HasIndex("UpdateDate")
                        .HasName("IX_UpdateDate");

                    b.HasIndex("UserId")
                        .HasName("IX_UserId");

                    b.ToTable("tb_cash_expenses");
                });

            modelBuilder.Entity("Apteka.Postgres.tbChangeHistories", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnName("id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("create_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid>("CreateUser")
                        .HasColumnName("create_user")
                        .HasColumnType("uuid");

                    b.Property<string>("DpInfo")
                        .HasColumnName("dp_info")
                        .HasColumnType("character varying(500)")
                        .HasMaxLength(500);

                    b.Property<Guid>("DrugStoreId")
                        .HasColumnName("drug_store_id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EntityId")
                        .HasColumnName("entity_id")
                        .HasColumnType("uuid");

                    b.Property<int>("OperationTypeId")
                        .HasColumnName("operation_type_id")
                        .HasColumnType("integer");

                    b.Property<decimal>("Piece")
                        .HasColumnName("piece")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("PriceChange")
                        .HasColumnName("price_change")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("PriceCur")
                        .HasColumnName("price_cur")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("PriceOld")
                        .HasColumnName("price_old")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("QtyChange")
                        .HasColumnName("qty_change")
                        .HasColumnType("integer");

                    b.Property<int>("QtyCur")
                        .HasColumnName("qty_cur")
                        .HasColumnType("integer");

                    b.Property<int>("QtyOld")
                        .HasColumnName("qty_old")
                        .HasColumnType("integer");

                    b.Property<int>("Send")
                        .HasColumnName("send")
                        .HasColumnType("integer");

                    b.Property<int?>("ServerId")
                        .HasColumnName("server_id")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasColumnType("integer")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnName("update_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid?>("UpdateUser")
                        .HasColumnName("update_user")
                        .HasColumnType("uuid");

                    b.HasKey("Id")
                        .HasName("pk_tb_change_histories");

                    b.HasIndex("CreateDate")
                        .HasName("IX_CreateDate");

                    b.HasIndex("Status")
                        .HasName("IX_Status");

                    b.HasIndex("UpdateDate")
                        .HasName("IX_UpdateDate");

                    b.ToTable("tb_change_histories");
                });

            modelBuilder.Entity("Apteka.Postgres.tbCustomers", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnName("id")
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .HasColumnName("address")
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("create_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid>("CreateUser")
                        .HasColumnName("create_user")
                        .HasColumnType("uuid");

                    b.Property<Guid>("DrugStoreId")
                        .HasColumnName("drug_store_id")
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .HasColumnName("email")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("name")
                        .HasColumnType("character varying(200)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(200);

                    b.Property<string>("Patronymic")
                        .HasColumnName("patronymic")
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Phone")
                        .HasColumnName("phone")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<int>("Send")
                        .HasColumnName("send")
                        .HasColumnType("integer");

                    b.Property<int?>("ServerId")
                        .HasColumnName("server_id")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasColumnType("integer")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("surname")
                        .HasColumnType("character varying(200)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnName("update_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid?>("UpdateUser")
                        .HasColumnName("update_user")
                        .HasColumnType("uuid");

                    b.HasKey("Id")
                        .HasName("pk_tb_customers");

                    b.HasIndex("CreateDate")
                        .HasName("IX_CreateDate");

                    b.HasIndex("Status")
                        .HasName("IX_Status");

                    b.HasIndex("UpdateDate")
                        .HasName("IX_UpdateDate");

                    b.ToTable("tb_customers");
                });

            modelBuilder.Entity("Apteka.Postgres.tbDebtRepayments", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnName("id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("BuyOnCreditId")
                        .HasColumnName("buy_on_credit_id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("CashVoucherId")
                        .HasColumnName("cash_voucher_id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("create_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid>("CreateUser")
                        .HasColumnName("create_user")
                        .HasColumnType("uuid");

                    b.Property<Guid>("DrugStoreId")
                        .HasColumnName("drug_store_id")
                        .HasColumnType("uuid");

                    b.Property<int>("Send")
                        .HasColumnName("send")
                        .HasColumnType("integer");

                    b.Property<int?>("ServerId")
                        .HasColumnName("server_id")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasColumnType("integer")
                        .HasDefaultValueSql("((1))");

                    b.Property<decimal>("Summa")
                        .HasColumnName("summa")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnName("update_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid?>("UpdateUser")
                        .HasColumnName("update_user")
                        .HasColumnType("uuid");

                    b.HasKey("Id")
                        .HasName("pk_tb_debt_repayments");

                    b.HasIndex("BuyOnCreditId")
                        .HasName("IX_BuyOnCreditId");

                    b.HasIndex("CashVoucherId")
                        .HasName("IX_CashVoucherId");

                    b.HasIndex("CreateDate")
                        .HasName("IX_CreateDate");

                    b.HasIndex("Status")
                        .HasName("IX_Status");

                    b.HasIndex("UpdateDate")
                        .HasName("IX_UpdateDate");

                    b.ToTable("tb_debt_repayments");
                });

            modelBuilder.Entity("Apteka.Postgres.tbDefectures", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnName("id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("create_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid>("CreateUser")
                        .HasColumnName("create_user")
                        .HasColumnType("uuid");

                    b.Property<Guid>("DrugId")
                        .HasColumnName("drug_id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("DrugStoreId")
                        .HasColumnName("drug_store_id")
                        .HasColumnType("uuid");

                    b.Property<int?>("OrderStatusId")
                        .HasColumnName("order_status_id")
                        .HasColumnType("integer");

                    b.Property<int>("QueryCount")
                        .HasColumnName("query_count")
                        .HasColumnType("integer");

                    b.Property<int>("Send")
                        .HasColumnName("send")
                        .HasColumnType("integer");

                    b.Property<int?>("ServerId")
                        .HasColumnName("server_id")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasColumnType("integer")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnName("update_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid?>("UpdateUser")
                        .HasColumnName("update_user")
                        .HasColumnType("uuid");

                    b.HasKey("Id")
                        .HasName("pk_tb_defectures");

                    b.HasIndex("CreateDate")
                        .HasName("IX_CreateDate");

                    b.HasIndex("DrugId")
                        .HasName("IX_DrugId");

                    b.HasIndex("OrderStatusId")
                        .HasName("IX_OrderStatusId");

                    b.HasIndex("QueryCount")
                        .HasName("IX_QueryCount");

                    b.HasIndex("Status")
                        .HasName("IX_Status");

                    b.HasIndex("UpdateDate")
                        .HasName("IX_UpdateDate");

                    b.ToTable("tb_defectures");
                });

            modelBuilder.Entity("Apteka.Postgres.tbDiscounts", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnName("id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("create_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid>("CreateUser")
                        .HasColumnName("create_user")
                        .HasColumnType("uuid");

                    b.Property<Guid>("DiscountTypeId")
                        .HasColumnName("discount_type_id")
                        .HasColumnType("uuid");

                    b.Property<string>("DpInfo")
                        .HasColumnName("dp_info")
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.Property<Guid>("DrugStoreId")
                        .HasColumnName("drug_store_id")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.Property<int>("Send")
                        .HasColumnName("send")
                        .HasColumnType("integer");

                    b.Property<int?>("ServerId")
                        .HasColumnName("server_id")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasColumnType("integer")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnName("update_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid?>("UpdateUser")
                        .HasColumnName("update_user")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ValidityTo")
                        .HasColumnName("validity_to")
                        .HasColumnType("timestamp");

                    b.Property<decimal>("Value")
                        .HasColumnName("value")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id")
                        .HasName("pk_tb_discounts");

                    b.HasIndex("CreateDate")
                        .HasName("IX_CreateDate");

                    b.HasIndex("DiscountTypeId")
                        .HasName("IX_DiscountTypeId");

                    b.HasIndex("Status")
                        .HasName("IX_Status");

                    b.HasIndex("UpdateDate")
                        .HasName("IX_UpdateDate");

                    b.ToTable("tb_discounts");
                });

            modelBuilder.Entity("Apteka.Postgres.tbDocItems", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnName("id")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AdditionalInfoId")
                        .HasColumnName("additional_info_id")
                        .HasColumnType("uuid");

                    b.Property<decimal?>("BasePrice")
                        .HasColumnName("base_price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("BookingCustomerName")
                        .HasColumnName("booking_customer_name")
                        .HasColumnType("text");

                    b.Property<DateTime?>("BookingTimeTo")
                        .HasColumnName("booking_time_to")
                        .HasColumnType("timestamp");

                    b.Property<Guid?>("ComingProductId")
                        .HasColumnName("coming_product_id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("create_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid>("CreateUser")
                        .HasColumnName("create_user")
                        .HasColumnType("uuid");

                    b.Property<int>("CurQty")
                        .HasColumnName("cur_qty")
                        .HasColumnType("integer");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnName("discriminator")
                        .HasColumnType("character varying(128)")
                        .HasMaxLength(128);

                    b.Property<Guid>("DocumentId")
                        .HasColumnName("document_id")
                        .HasColumnType("uuid");

                    b.Property<string>("DpInfo")
                        .HasColumnName("dp_info")
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.Property<Guid>("DrugId")
                        .HasColumnName("drug_id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("DrugStoreId")
                        .HasColumnName("drug_store_id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnName("expiry_date")
                        .HasColumnType("timestamp");

                    b.Property<decimal>("ExtraCharge")
                        .HasColumnName("extra_charge")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("IncomingPrice")
                        .HasColumnName("incoming_price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("OperationTypeId")
                        .HasColumnName("operation_type_id")
                        .HasColumnType("integer");

                    b.Property<decimal>("Price")
                        .HasColumnName("price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("Qty")
                        .HasColumnName("qty")
                        .HasColumnType("integer");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("row_version")
                        .HasColumnType("bytea");

                    b.Property<int>("Send")
                        .HasColumnName("send")
                        .HasColumnType("integer");

                    b.Property<string>("SeriesNo")
                        .HasColumnName("series_no")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("ServerId")
                        .HasColumnName("server_id")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasColumnType("integer")
                        .HasDefaultValueSql("((1))");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnName("total_amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnName("update_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid?>("UpdateUser")
                        .HasColumnName("update_user")
                        .HasColumnType("uuid");

                    b.Property<decimal>("Vat")
                        .HasColumnName("vat")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id")
                        .HasName("pk_tb_doc_items");

                    b.HasIndex("AdditionalInfoId")
                        .HasName("IX_AdditionalInfoId");

                    b.HasIndex("CreateDate")
                        .HasName("IX_CreateDate");

                    b.HasIndex("CurQty")
                        .HasName("IX_CurQty");

                    b.HasIndex("DocumentId")
                        .HasName("IX_DocumentId");

                    b.HasIndex("DrugId")
                        .HasName("IX_DrugId");

                    b.HasIndex("ExpiryDate")
                        .HasName("IX_ExpiryDate");

                    b.HasIndex("OperationTypeId")
                        .HasName("IX_OperationTypeId");

                    b.HasIndex("Status")
                        .HasName("IX_Status");

                    b.HasIndex("UpdateDate")
                        .HasName("IX_UpdateDate");

                    b.HasIndex("DrugId", "CurQty", "OperationTypeId")
                        .HasName("IDX_tbDocItems_OperationTypeId");

                    b.HasIndex("DrugId", "OperationTypeId", "CreateDate")
                        .HasName("IDX_tbDocItems");

                    b.ToTable("tb_doc_items");
                });

            modelBuilder.Entity("Apteka.Postgres.tbDocs", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnName("id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("create_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid>("CreateUser")
                        .HasColumnName("create_user")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("DiscountId")
                        .HasColumnName("discount_id")
                        .HasColumnType("uuid");

                    b.Property<decimal?>("DiscountPercentage")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("discount_percentage")
                        .HasColumnType("decimal(18, 2)")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnName("discriminator")
                        .HasColumnType("character varying(128)")
                        .HasMaxLength(128);

                    b.Property<Guid?>("DistributorId")
                        .HasColumnName("distributor_id")
                        .HasColumnType("uuid");

                    b.Property<string>("DocumentNo")
                        .HasColumnName("document_no")
                        .HasColumnType("character varying(20)")
                        .HasMaxLength(20);

                    b.Property<Guid>("DrugStoreId")
                        .HasColumnName("drug_store_id")
                        .HasColumnType("uuid");

                    b.Property<int?>("OnlinePayments")
                        .HasColumnName("online_payments")
                        .HasColumnType("integer");

                    b.Property<decimal?>("PaymentByCard")
                        .HasColumnName("payment_by_card")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("PaymentByCash")
                        .HasColumnName("payment_by_cash")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("Send")
                        .HasColumnName("send")
                        .HasColumnType("integer");

                    b.Property<int?>("ServerId")
                        .HasColumnName("server_id")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasColumnType("integer")
                        .HasDefaultValueSql("((1))");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnName("total_amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("TotalAmountWithoutDiscount")
                        .HasColumnName("total_amount_without_discount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("TotalDrugs")
                        .HasColumnName("total_drugs")
                        .HasColumnType("integer");

                    b.Property<int?>("TypeOfPayments")
                        .HasColumnName("type_of_payments")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnName("update_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid?>("UpdateUser")
                        .HasColumnName("update_user")
                        .HasColumnType("uuid");

                    b.HasKey("Id")
                        .HasName("pk_tb_docs");

                    b.HasIndex("CreateDate")
                        .HasName("IX_CreateDate");

                    b.HasIndex("DiscountId")
                        .HasName("IX_DiscountId");

                    b.HasIndex("DistributorId")
                        .HasName("IX_DistributorId");

                    b.HasIndex("Status")
                        .HasName("IX_Status");

                    b.HasIndex("UpdateDate")
                        .HasName("IX_UpdateDate");

                    b.ToTable("tb_docs");
                });

            modelBuilder.Entity("Apteka.Postgres.tbDrugAdditionalInfoes", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnName("id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("create_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid>("CreateUser")
                        .HasColumnName("create_user")
                        .HasColumnType("uuid");

                    b.Property<string>("Data")
                        .HasColumnName("data")
                        .HasColumnType("text");

                    b.Property<Guid>("DrugStoreId")
                        .HasColumnName("drug_store_id")
                        .HasColumnType("uuid");

                    b.Property<int>("InfoTypeId")
                        .HasColumnName("info_type_id")
                        .HasColumnType("integer");

                    b.Property<int>("Send")
                        .HasColumnName("send")
                        .HasColumnType("integer");

                    b.Property<int?>("ServerId")
                        .HasColumnName("server_id")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasColumnType("integer")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnName("update_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid?>("UpdateUser")
                        .HasColumnName("update_user")
                        .HasColumnType("uuid");

                    b.HasKey("Id")
                        .HasName("pk_tb_drug_additional_infoes");

                    b.HasIndex("CreateDate")
                        .HasName("IX_CreateDate");

                    b.HasIndex("InfoTypeId")
                        .HasName("IX_InfoTypeId");

                    b.HasIndex("Status")
                        .HasName("IX_Status");

                    b.HasIndex("UpdateDate")
                        .HasName("IX_UpdateDate");

                    b.ToTable("tb_drug_additional_infoes");
                });

            modelBuilder.Entity("Apteka.Postgres.tbEncashments", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnName("id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("create_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid>("CreateUser")
                        .HasColumnName("create_user")
                        .HasColumnType("uuid");

                    b.Property<string>("DpInfo")
                        .HasColumnName("dp_info")
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.Property<Guid>("DrugStoreId")
                        .HasColumnName("drug_store_id")
                        .HasColumnType("uuid");

                    b.Property<int>("Send")
                        .HasColumnName("send")
                        .HasColumnType("integer");

                    b.Property<int?>("ServerId")
                        .HasColumnName("server_id")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasColumnType("integer")
                        .HasDefaultValueSql("((1))");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnName("total_amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnName("update_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid?>("UpdateUser")
                        .HasColumnName("update_user")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnName("user_id")
                        .HasColumnType("uuid");

                    b.HasKey("Id")
                        .HasName("pk_tb_encashments");

                    b.HasIndex("CreateDate")
                        .HasName("IX_CreateDate");

                    b.HasIndex("Status")
                        .HasName("IX_Status");

                    b.HasIndex("UpdateDate")
                        .HasName("IX_UpdateDate");

                    b.HasIndex("UserId")
                        .HasName("IX_UserId");

                    b.ToTable("tb_encashments");
                });

            modelBuilder.Entity("Apteka.Postgres.tbInventories", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnName("id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("create_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid>("CreateUser")
                        .HasColumnName("create_user")
                        .HasColumnType("uuid");

                    b.Property<string>("DpInfo")
                        .HasColumnName("dp_info")
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.Property<Guid>("DrugStoreId")
                        .HasColumnName("drug_store_id")
                        .HasColumnType("uuid");

                    b.Property<int>("Send")
                        .HasColumnName("send")
                        .HasColumnType("integer");

                    b.Property<int?>("ServerId")
                        .HasColumnName("server_id")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasColumnType("integer")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnName("update_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid?>("UpdateUser")
                        .HasColumnName("update_user")
                        .HasColumnType("uuid");

                    b.HasKey("Id")
                        .HasName("pk_tb_inventories");

                    b.HasIndex("CreateDate")
                        .HasName("IX_CreateDate");

                    b.HasIndex("DpInfo")
                        .HasName("IX_DpInfo");

                    b.HasIndex("Status")
                        .HasName("IX_Status");

                    b.HasIndex("UpdateDate")
                        .HasName("IX_UpdateDate");

                    b.ToTable("tb_inventories");
                });

            modelBuilder.Entity("Apteka.Postgres.tbInventoryCurrentLists", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnName("id")
                        .HasColumnType("uuid");

                    b.Property<string>("Barcode")
                        .HasColumnName("barcode")
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .HasColumnName("country")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("create_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid>("CreateUser")
                        .HasColumnName("create_user")
                        .HasColumnType("uuid");

                    b.Property<int>("CurQty")
                        .HasColumnName("cur_qty")
                        .HasColumnType("integer");

                    b.Property<Guid>("DocumentId")
                        .HasColumnName("document_id")
                        .HasColumnType("uuid");

                    b.Property<string>("DrugCategory")
                        .HasColumnName("drug_category")
                        .HasColumnType("text");

                    b.Property<Guid>("DrugId")
                        .HasColumnName("drug_id")
                        .HasColumnType("uuid");

                    b.Property<string>("DrugName")
                        .HasColumnName("drug_name")
                        .HasColumnType("text");

                    b.Property<Guid>("DrugStoreId")
                        .HasColumnName("drug_store_id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnName("expiry_date")
                        .HasColumnType("timestamp");

                    b.Property<int>("FactQty")
                        .HasColumnName("fact_qty")
                        .HasColumnType("integer");

                    b.Property<decimal>("IncomingPrice")
                        .HasColumnName("incoming_price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("InventoryDocId")
                        .HasColumnName("inventory_doc_id")
                        .HasColumnType("uuid");

                    b.Property<int>("IzlishkQty")
                        .HasColumnName("izlishk_qty")
                        .HasColumnType("integer");

                    b.Property<int>("KassaChange")
                        .HasColumnName("kassa_change")
                        .HasColumnType("integer");

                    b.Property<int>("KassaFactQty")
                        .HasColumnName("kassa_fact_qty")
                        .HasColumnType("integer");

                    b.Property<string>("Manufacture")
                        .HasColumnName("manufacture")
                        .HasColumnType("text");

                    b.Property<Guid?>("ManufacturerId")
                        .HasColumnName("manufacturer_id")
                        .HasColumnType("uuid");

                    b.Property<int>("NedastachQty")
                        .HasColumnName("nedastach_qty")
                        .HasColumnType("integer");

                    b.Property<int>("OperationTypeId")
                        .HasColumnName("operation_type_id")
                        .HasColumnType("integer");

                    b.Property<int>("Piece")
                        .HasColumnName("piece")
                        .HasColumnType("integer");

                    b.Property<decimal>("Price")
                        .HasColumnName("price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("Send")
                        .HasColumnName("send")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasColumnType("integer")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Unit")
                        .HasColumnName("unit")
                        .HasColumnType("text");

                    b.Property<Guid?>("UnitId")
                        .HasColumnName("unit_id")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnName("update_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid?>("UpdateUser")
                        .HasColumnName("update_user")
                        .HasColumnType("uuid");

                    b.HasKey("Id")
                        .HasName("pk_tb_inventory_current_lists");

                    b.HasIndex("CreateDate")
                        .HasName("IX_CreateDate");

                    b.HasIndex("Status")
                        .HasName("IX_Status");

                    b.HasIndex("UpdateDate")
                        .HasName("IX_UpdateDate");

                    b.ToTable("tb_inventory_current_lists");
                });

            modelBuilder.Entity("Apteka.Postgres.tbInventoryItems", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnName("id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ComingProductsItemId")
                        .HasColumnName("coming_products_item_id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("create_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid>("CreateUser")
                        .HasColumnName("create_user")
                        .HasColumnType("uuid");

                    b.Property<int>("CurQty")
                        .HasColumnName("cur_qty")
                        .HasColumnType("integer");

                    b.Property<Guid>("DrugId")
                        .HasColumnName("drug_id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("DrugStoreId")
                        .HasColumnName("drug_store_id")
                        .HasColumnType("uuid");

                    b.Property<int>("FactQty")
                        .HasColumnName("fact_qty")
                        .HasColumnType("integer");

                    b.Property<Guid>("InventorytId")
                        .HasColumnName("inventoryt_id")
                        .HasColumnType("uuid");

                    b.Property<int>("Send")
                        .HasColumnName("send")
                        .HasColumnType("integer");

                    b.Property<int?>("ServerId")
                        .HasColumnName("server_id")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasColumnType("integer")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnName("update_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid?>("UpdateUser")
                        .HasColumnName("update_user")
                        .HasColumnType("uuid");

                    b.HasKey("Id")
                        .HasName("pk_tb_inventory_items");

                    b.HasIndex("ComingProductsItemId")
                        .HasName("IX_ComingProductsItemId");

                    b.HasIndex("CreateDate")
                        .HasName("IX_CreateDate");

                    b.HasIndex("DrugId")
                        .HasName("IX_DrugId");

                    b.HasIndex("InventorytId")
                        .HasName("IX_InventorytId");

                    b.HasIndex("Status")
                        .HasName("IX_Status");

                    b.HasIndex("UpdateDate")
                        .HasName("IX_UpdateDate");

                    b.ToTable("tb_inventory_items");
                });

            modelBuilder.Entity("Apteka.Postgres.tbLog", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("txt")
                        .HasColumnName("txt")
                        .HasColumnType("text");

                    b.HasKey("id")
                        .HasName("pk_tb_log");

                    b.ToTable("tb_log");
                });

            modelBuilder.Entity("Apteka.Postgres.tbLosses", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnName("id")
                        .HasColumnType("uuid");

                    b.Property<decimal>("Amount")
                        .HasColumnName("amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("create_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid>("CreateUser")
                        .HasColumnName("create_user")
                        .HasColumnType("uuid");

                    b.Property<string>("Descriptin")
                        .HasColumnName("descriptin")
                        .HasColumnType("text");

                    b.Property<Guid>("DrugStoreId")
                        .HasColumnName("drug_store_id")
                        .HasColumnType("uuid");

                    b.Property<int>("Send")
                        .HasColumnName("send")
                        .HasColumnType("integer");

                    b.Property<int?>("ServerId")
                        .HasColumnName("server_id")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasColumnType("integer")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnName("update_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid?>("UpdateUser")
                        .HasColumnName("update_user")
                        .HasColumnType("uuid");

                    b.HasKey("Id")
                        .HasName("pk_tb_losses");

                    b.HasIndex("CreateDate")
                        .HasName("IX_CreateDate");

                    b.HasIndex("Status")
                        .HasName("IX_Status");

                    b.HasIndex("UpdateDate")
                        .HasName("IX_UpdateDate");

                    b.ToTable("tb_losses");
                });

            modelBuilder.Entity("Apteka.Postgres.tbMandatoryDrugs", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnName("id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("create_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid>("CreateUser")
                        .HasColumnName("create_user")
                        .HasColumnType("uuid");

                    b.Property<Guid>("DrugId")
                        .HasColumnName("drug_id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("DrugStoreId")
                        .HasColumnName("drug_store_id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("PriceItemId")
                        .HasColumnName("price_item_id")
                        .HasColumnType("uuid");

                    b.Property<int>("Send")
                        .HasColumnName("send")
                        .HasColumnType("integer");

                    b.Property<int?>("ServerId")
                        .HasColumnName("server_id")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasColumnType("integer")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnName("update_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid?>("UpdateUser")
                        .HasColumnName("update_user")
                        .HasColumnType("uuid");

                    b.HasKey("Id")
                        .HasName("pk_tb_mandatory_drugs");

                    b.HasIndex("CreateDate")
                        .HasName("IX_CreateDate");

                    b.HasIndex("DrugId")
                        .HasName("IX_DrugId");

                    b.HasIndex("PriceItemId")
                        .HasName("IX_PriceItemId");

                    b.HasIndex("Status")
                        .HasName("IX_Status");

                    b.HasIndex("UpdateDate")
                        .HasName("IX_UpdateDate");

                    b.ToTable("tb_mandatory_drugs");
                });

            modelBuilder.Entity("Apteka.Postgres.tbMedicalInsurances", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnName("id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("create_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid>("CreateUser")
                        .HasColumnName("create_user")
                        .HasColumnType("uuid");

                    b.Property<Guid>("DocId")
                        .HasColumnName("doc_id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("DrugStoreId")
                        .HasColumnName("drug_store_id")
                        .HasColumnType("uuid");

                    b.Property<string>("InsuranceCategory")
                        .HasColumnName("insurance_category")
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.Property<Guid>("InsuranceId")
                        .HasColumnName("insurance_id")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Patronymic")
                        .HasColumnName("patronymic")
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.Property<int>("Send")
                        .HasColumnName("send")
                        .HasColumnType("integer");

                    b.Property<int?>("ServerId")
                        .HasColumnName("server_id")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasColumnType("integer")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnName("surname")
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnName("update_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid?>("UpdateUser")
                        .HasColumnName("update_user")
                        .HasColumnType("uuid");

                    b.HasKey("Id")
                        .HasName("pk_tb_medical_insurances");

                    b.HasIndex("CreateDate")
                        .HasName("IX_CreateDate");

                    b.HasIndex("InsuranceId")
                        .HasName("IX_InsuranceId");

                    b.HasIndex("Status")
                        .HasName("IX_Status");

                    b.HasIndex("UpdateDate")
                        .HasName("IX_UpdateDate");

                    b.ToTable("tb_medical_insurances");
                });

            modelBuilder.Entity("Apteka.Postgres.tbMonitorSyncs", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnName("id")
                        .HasColumnType("uuid");

                    b.Property<string>("ClientIp")
                        .HasColumnName("client_ip")
                        .HasColumnType("text");

                    b.Property<string>("ClientMac")
                        .HasColumnName("client_mac")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("create_date")
                        .HasColumnType("timestamp");

                    b.Property<int>("InsCount")
                        .HasColumnName("ins_count")
                        .HasColumnType("integer");

                    b.Property<int>("SendCount")
                        .HasColumnName("send_count")
                        .HasColumnType("integer");

                    b.Property<string>("TableName")
                        .HasColumnName("table_name")
                        .HasColumnType("text");

                    b.Property<int>("UpdCount")
                        .HasColumnName("upd_count")
                        .HasColumnType("integer");

                    b.HasKey("Id")
                        .HasName("pk_tb_monitor_syncs");

                    b.ToTable("tb_monitor_syncs");
                });

            modelBuilder.Entity("Apteka.Postgres.tbOnlinePaySystems", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnName("id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("create_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid>("CreateUser")
                        .HasColumnName("create_user")
                        .HasColumnType("uuid");

                    b.Property<Guid>("DocId")
                        .HasColumnName("doc_id")
                        .HasColumnType("uuid");

                    b.Property<string>("DpInfo")
                        .HasColumnName("dp_info")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<Guid>("DrugStoreId")
                        .HasColumnName("drug_store_id")
                        .HasColumnType("uuid");

                    b.Property<int>("OnlinePaymentId")
                        .HasColumnName("online_payment_id")
                        .HasColumnType("integer");

                    b.Property<decimal>("PaySumma")
                        .HasColumnName("pay_summa")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("Send")
                        .HasColumnName("send")
                        .HasColumnType("integer");

                    b.Property<int?>("ServerId")
                        .HasColumnName("server_id")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasColumnType("integer")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnName("update_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid?>("UpdateUser")
                        .HasColumnName("update_user")
                        .HasColumnType("uuid");

                    b.HasKey("Id")
                        .HasName("pk_tb_online_pay_systems");

                    b.HasIndex("CreateDate")
                        .HasName("IX_CreateDate");

                    b.HasIndex("Status")
                        .HasName("IX_Status");

                    b.HasIndex("UpdateDate")
                        .HasName("IX_UpdateDate");

                    b.ToTable("tb_online_pay_systems");
                });

            modelBuilder.Entity("Apteka.Postgres.tbOrderItems", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnName("id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("create_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid>("CreateUser")
                        .HasColumnName("create_user")
                        .HasColumnType("uuid");

                    b.Property<string>("DrugName")
                        .IsRequired()
                        .HasColumnName("drug_name")
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.Property<Guid>("DrugStoreId")
                        .HasColumnName("drug_store_id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("OrderId")
                        .HasColumnName("order_id")
                        .HasColumnType("uuid");

                    b.Property<decimal>("Price")
                        .HasColumnName("price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Qty")
                        .HasColumnName("qty")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("Send")
                        .HasColumnName("send")
                        .HasColumnType("integer");

                    b.Property<int?>("ServerId")
                        .HasColumnName("server_id")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasColumnType("integer")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnName("update_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid?>("UpdateUser")
                        .HasColumnName("update_user")
                        .HasColumnType("uuid");

                    b.HasKey("Id")
                        .HasName("pk_tb_order_items");

                    b.HasIndex("CreateDate")
                        .HasName("IX_CreateDate");

                    b.HasIndex("OrderId")
                        .HasName("IX_OrderId");

                    b.HasIndex("Status")
                        .HasName("IX_Status");

                    b.HasIndex("UpdateDate")
                        .HasName("IX_UpdateDate");

                    b.ToTable("tb_order_items");
                });

            modelBuilder.Entity("Apteka.Postgres.tbOrders", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnName("id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("create_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid>("CreateUser")
                        .HasColumnName("create_user")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Created")
                        .HasColumnName("created")
                        .HasColumnType("timestamp");

                    b.Property<DateTime>("DeliveryTime")
                        .HasColumnName("delivery_time")
                        .HasColumnType("timestamp");

                    b.Property<Guid>("DrugStoreId")
                        .HasColumnName("drug_store_id")
                        .HasColumnType("uuid");

                    b.Property<int>("Send")
                        .HasColumnName("send")
                        .HasColumnType("integer");

                    b.Property<int?>("ServerId")
                        .HasColumnName("server_id")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasColumnType("integer")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnName("update_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid?>("UpdateUser")
                        .HasColumnName("update_user")
                        .HasColumnType("uuid");

                    b.HasKey("Id")
                        .HasName("pk_tb_orders");

                    b.HasIndex("CreateDate")
                        .HasName("IX_CreateDate");

                    b.HasIndex("Status")
                        .HasName("IX_Status");

                    b.HasIndex("UpdateDate")
                        .HasName("IX_UpdateDate");

                    b.ToTable("tb_orders");
                });

            modelBuilder.Entity("Apteka.Postgres.tbPriceDocs", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnName("id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("create_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid>("CreateUser")
                        .HasColumnName("create_user")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnName("description")
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.Property<Guid>("DistributorId")
                        .HasColumnName("distributor_id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("DrugStoreId")
                        .HasColumnName("drug_store_id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("PriceDate")
                        .HasColumnName("price_date")
                        .HasColumnType("timestamp");

                    b.Property<int>("Send")
                        .HasColumnName("send")
                        .HasColumnType("integer");

                    b.Property<int?>("ServerId")
                        .HasColumnName("server_id")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasColumnType("integer")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnName("update_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid?>("UpdateUser")
                        .HasColumnName("update_user")
                        .HasColumnType("uuid");

                    b.HasKey("Id")
                        .HasName("pk_tb_price_docs");

                    b.HasIndex("CreateDate")
                        .HasName("IX_CreateDate");

                    b.HasIndex("DistributorId")
                        .HasName("IX_DistributorId");

                    b.HasIndex("Status")
                        .HasName("IX_Status");

                    b.HasIndex("UpdateDate")
                        .HasName("IX_UpdateDate");

                    b.ToTable("tb_price_docs");
                });

            modelBuilder.Entity("Apteka.Postgres.tbPriceItems", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnName("id")
                        .HasColumnType("uuid");

                    b.Property<decimal>("BasePrice")
                        .HasColumnName("base_price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("create_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid>("CreateUser")
                        .HasColumnName("create_user")
                        .HasColumnType("uuid");

                    b.Property<Guid>("DrugId")
                        .HasColumnName("drug_id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("DrugStoreId")
                        .HasColumnName("drug_store_id")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnName("expiry_date")
                        .HasColumnType("timestamp");

                    b.Property<decimal>("ExtraCharge")
                        .HasColumnName("extra_charge")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid?>("ManufacturerId")
                        .HasColumnName("manufacturer_id")
                        .HasColumnType("uuid");

                    b.Property<int>("Piece")
                        .HasColumnName("piece")
                        .HasColumnType("integer");

                    b.Property<decimal>("Price")
                        .HasColumnName("price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("PriceDocId")
                        .HasColumnName("price_doc_id")
                        .HasColumnType("uuid");

                    b.Property<int>("Qty")
                        .HasColumnName("qty")
                        .HasColumnType("integer");

                    b.Property<decimal>("Rating")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("rating")
                        .HasColumnType("decimal(18, 2)")
                        .HasDefaultValueSql("((1))");

                    b.Property<int>("Send")
                        .HasColumnName("send")
                        .HasColumnType("integer");

                    b.Property<string>("SeriesNo")
                        .HasColumnName("series_no")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("ServerId")
                        .HasColumnName("server_id")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasColumnType("integer")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnName("update_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid?>("UpdateUser")
                        .HasColumnName("update_user")
                        .HasColumnType("uuid");

                    b.Property<decimal?>("Vat")
                        .HasColumnName("vat")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("VendorDrugName")
                        .IsRequired()
                        .HasColumnName("vendor_drug_name")
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.Property<string>("VendorManufacturer")
                        .HasColumnName("vendor_manufacturer")
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.HasKey("Id")
                        .HasName("pk_tb_price_items");

                    b.HasIndex("CreateDate")
                        .HasName("IX_CreateDate");

                    b.HasIndex("PriceDocId")
                        .HasName("IX_PriceDocId");

                    b.HasIndex("Status")
                        .HasName("IX_Status");

                    b.HasIndex("UpdateDate")
                        .HasName("IX_UpdateDate");

                    b.ToTable("tb_price_items");
                });

            modelBuilder.Entity("Apteka.Postgres.tbReceipts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("create_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid>("CreateUser")
                        .HasColumnName("create_user")
                        .HasColumnType("uuid");

                    b.Property<Guid>("DocsId")
                        .HasColumnName("docs_id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("DrugStoreId")
                        .HasColumnName("drug_store_id")
                        .HasColumnType("uuid");

                    b.Property<int>("Send")
                        .HasColumnName("send")
                        .HasColumnType("integer");

                    b.Property<int?>("ServerId")
                        .HasColumnName("server_id")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasColumnType("integer")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnName("update_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid?>("UpdateUser")
                        .HasColumnName("update_user")
                        .HasColumnType("uuid");

                    b.HasKey("Id")
                        .HasName("pk_tb_receipts");

                    b.HasIndex("CreateDate")
                        .HasName("IX_CreateDate");

                    b.HasIndex("DocsId")
                        .HasName("IX_DocsId");

                    b.HasIndex("Status")
                        .HasName("IX_Status");

                    b.HasIndex("UpdateDate")
                        .HasName("IX_UpdateDate");

                    b.ToTable("tb_receipts");
                });

            modelBuilder.Entity("Apteka.Postgres.tbReturnOfProducts", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnName("id")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ComingProductId")
                        .HasColumnName("coming_product_id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("create_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid>("CreateUser")
                        .HasColumnName("create_user")
                        .HasColumnType("uuid");

                    b.Property<Guid>("DrugStoreId")
                        .HasColumnName("drug_store_id")
                        .HasColumnType("uuid");

                    b.Property<int>("Qty")
                        .HasColumnName("qty")
                        .HasColumnType("integer");

                    b.Property<int>("Send")
                        .HasColumnName("send")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasColumnType("integer")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnName("update_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid?>("UpdateUser")
                        .HasColumnName("update_user")
                        .HasColumnType("uuid");

                    b.HasKey("Id")
                        .HasName("pk_tb_return_of_products");

                    b.HasIndex("CreateDate")
                        .HasName("IX_CreateDate");

                    b.HasIndex("Status")
                        .HasName("IX_Status");

                    b.HasIndex("UpdateDate")
                        .HasName("IX_UpdateDate");

                    b.ToTable("tb_return_of_products");
                });

            modelBuilder.Entity("Apteka.Postgres.tbRevaluationOfDrugs", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnName("id")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ComingProductId")
                        .HasColumnName("coming_product_id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("create_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid>("CreateUser")
                        .HasColumnName("create_user")
                        .HasColumnType("uuid");

                    b.Property<int>("CurQty")
                        .HasColumnName("cur_qty")
                        .HasColumnType("integer");

                    b.Property<Guid>("DrugStoreId")
                        .HasColumnName("drug_store_id")
                        .HasColumnType("uuid");

                    b.Property<decimal>("ExtraCharge")
                        .HasColumnName("extra_charge")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("IncomingPrice")
                        .HasColumnName("incoming_price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("NewExtraCharge")
                        .HasColumnName("new_extra_charge")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("NewPrice")
                        .HasColumnName("new_price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("OldPrice")
                        .HasColumnName("old_price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Price")
                        .HasColumnName("price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("Send")
                        .HasColumnName("send")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasColumnType("integer")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnName("update_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid?>("UpdateUser")
                        .HasColumnName("update_user")
                        .HasColumnType("uuid");

                    b.HasKey("Id")
                        .HasName("pk_tb_revaluation_of_drugs");

                    b.HasIndex("CreateDate")
                        .HasName("IX_CreateDate");

                    b.HasIndex("Status")
                        .HasName("IX_Status");

                    b.HasIndex("UpdateDate")
                        .HasName("IX_UpdateDate");

                    b.ToTable("tb_revaluation_of_drugs");
                });

            modelBuilder.Entity("Apteka.Postgres.tbSdachis", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnName("id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("create_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid>("CreateUser")
                        .HasColumnName("create_user")
                        .HasColumnType("uuid");

                    b.Property<Guid>("DocItemId")
                        .HasColumnName("doc_item_id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("DrugId")
                        .HasColumnName("drug_id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("DrugStoreId")
                        .HasColumnName("drug_store_id")
                        .HasColumnType("uuid");

                    b.Property<decimal>("Price")
                        .HasColumnName("price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("Send")
                        .HasColumnName("send")
                        .HasColumnType("integer");

                    b.Property<int?>("ServerId")
                        .HasColumnName("server_id")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasColumnType("integer")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnName("update_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid?>("UpdateUser")
                        .HasColumnName("update_user")
                        .HasColumnType("uuid");

                    b.HasKey("Id")
                        .HasName("pk_tb_sdachis");

                    b.HasIndex("CreateDate")
                        .HasName("IX_CreateDate");

                    b.HasIndex("DocItemId")
                        .HasName("IX_DocItemId");

                    b.HasIndex("DrugId")
                        .IsUnique()
                        .HasName("IX_tbSdachi");

                    b.HasIndex("Status")
                        .HasName("IX_Status");

                    b.HasIndex("UpdateDate")
                        .HasName("IX_UpdateDate");

                    b.ToTable("tb_sdachis");
                });

            modelBuilder.Entity("Apteka.Postgres.tbSetups", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnName("id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("create_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid>("CreateUser")
                        .HasColumnName("create_user")
                        .HasColumnType("uuid");

                    b.Property<Guid>("DrugStoreId")
                        .HasColumnName("drug_store_id")
                        .HasColumnType("uuid");

                    b.Property<string>("JsonGlobalSystemConfig")
                        .HasColumnName("json_global_system_config")
                        .HasColumnType("text");

                    b.Property<int>("Send")
                        .HasColumnName("send")
                        .HasColumnType("integer");

                    b.Property<int?>("ServerId")
                        .HasColumnName("server_id")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasColumnType("integer")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnName("update_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid?>("UpdateUser")
                        .HasColumnName("update_user")
                        .HasColumnType("uuid");

                    b.HasKey("Id")
                        .HasName("pk_tb_setups");

                    b.HasIndex("CreateDate")
                        .HasName("IX_CreateDate");

                    b.HasIndex("Status")
                        .HasName("IX_Status");

                    b.HasIndex("UpdateDate")
                        .HasName("IX_UpdateDate");

                    b.ToTable("tb_setups");
                });

            modelBuilder.Entity("Apteka.Postgres.tbSmenas", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnName("id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Begin")
                        .HasColumnName("begin")
                        .HasColumnType("timestamp");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("create_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid>("CreateUser")
                        .HasColumnName("create_user")
                        .HasColumnType("uuid");

                    b.Property<string>("DpInfo")
                        .HasColumnName("dp_info")
                        .HasColumnType("text");

                    b.Property<Guid>("DrugStoreId")
                        .HasColumnName("drug_store_id")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("End")
                        .HasColumnName("end")
                        .HasColumnType("timestamp");

                    b.Property<decimal>("Expenses")
                        .HasColumnName("expenses")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("PaymentByCard")
                        .HasColumnName("payment_by_card")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("PaymentByCash")
                        .HasColumnName("payment_by_cash")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("Send")
                        .HasColumnName("send")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasColumnType("integer")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnName("update_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid?>("UpdateUser")
                        .HasColumnName("update_user")
                        .HasColumnType("uuid");

                    b.HasKey("Id")
                        .HasName("pk_tb_smenas");

                    b.HasIndex("CreateDate")
                        .HasName("IX_CreateDate");

                    b.HasIndex("Status")
                        .HasName("IX_Status");

                    b.HasIndex("UpdateDate")
                        .HasName("IX_UpdateDate");

                    b.ToTable("tb_smenas");
                });

            modelBuilder.Entity("Apteka.Postgres.tbTurnovers", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnName("id")
                        .HasColumnType("uuid");

                    b.Property<int>("Back")
                        .HasColumnName("back")
                        .HasColumnType("integer");

                    b.Property<int>("BalanceEnd")
                        .HasColumnName("balance_end")
                        .HasColumnType("integer");

                    b.Property<int>("BalanceStart")
                        .HasColumnName("balance_start")
                        .HasColumnType("integer");

                    b.Property<int>("Coming")
                        .HasColumnName("coming")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("create_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid>("CreateUser")
                        .HasColumnName("create_user")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CurrentDate")
                        .HasColumnName("current_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid>("DrugId")
                        .HasColumnName("drug_id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("DrugStorId")
                        .HasColumnName("drug_stor_id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("DrugStoreId")
                        .HasColumnName("drug_store_id")
                        .HasColumnType("uuid");

                    b.Property<int>("Sale")
                        .HasColumnName("sale")
                        .HasColumnType("integer");

                    b.Property<int>("Send")
                        .HasColumnName("send")
                        .HasColumnType("integer");

                    b.Property<string>("SeriesNo")
                        .HasColumnName("series_no")
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("ServerId")
                        .HasColumnName("server_id")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasColumnType("integer")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnName("update_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid?>("UpdateUser")
                        .HasColumnName("update_user")
                        .HasColumnType("uuid");

                    b.Property<int>("WriteOff")
                        .HasColumnName("write_off")
                        .HasColumnType("integer");

                    b.HasKey("Id")
                        .HasName("pk_tb_turnovers");

                    b.HasIndex("CreateDate")
                        .HasName("IX_CreateDate");

                    b.HasIndex("DrugId")
                        .HasName("IX_DrugId");

                    b.HasIndex("DrugStoreId")
                        .HasName("IX_DrugStoreId");

                    b.HasIndex("Status")
                        .HasName("IX_Status");

                    b.HasIndex("UpdateDate")
                        .HasName("IX_UpdateDate");

                    b.ToTable("tb_turnovers");
                });

            modelBuilder.Entity("Apteka.Postgres.tbUsers", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnName("id")
                        .HasColumnType("uuid");

                    b.Property<string>("CardNumber")
                        .HasColumnName("card_number")
                        .HasColumnType("character varying(10)")
                        .HasMaxLength(10);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("create_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid>("CreateUser")
                        .HasColumnName("create_user")
                        .HasColumnType("uuid");

                    b.Property<Guid>("DrugStoreId")
                        .HasColumnName("drug_store_id")
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .HasColumnName("email")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("FatherName")
                        .IsRequired()
                        .HasColumnName("father_name")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnName("first_name")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnName("last_name")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnName("login")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnName("password")
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.Property<Guid>("RoleId")
                        .HasColumnName("role_id")
                        .HasColumnType("uuid");

                    b.Property<int>("Send")
                        .HasColumnName("send")
                        .HasColumnType("integer");

                    b.Property<int?>("ServerId")
                        .HasColumnName("server_id")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasColumnType("integer")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnName("update_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid?>("UpdateUser")
                        .HasColumnName("update_user")
                        .HasColumnType("uuid");

                    b.HasKey("Id")
                        .HasName("pk_tb_users");

                    b.HasIndex("CreateDate")
                        .HasName("IX_CreateDate");

                    b.HasIndex("RoleId")
                        .HasName("IX_RoleId");

                    b.HasIndex("Status")
                        .HasName("IX_Status");

                    b.HasIndex("UpdateDate")
                        .HasName("IX_UpdateDate");

                    b.ToTable("tb_users");
                });

            modelBuilder.Entity("Apteka.Postgres.tbWriteOffs", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnName("id")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ComingProductId")
                        .HasColumnName("coming_product_id")
                        .HasColumnType("uuid");

                    b.Property<string>("Comment")
                        .HasColumnName("comment")
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("create_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid>("CreateUser")
                        .HasColumnName("create_user")
                        .HasColumnType("uuid");

                    b.Property<int>("CurQty")
                        .HasColumnName("cur_qty")
                        .HasColumnType("integer");

                    b.Property<Guid>("DrugStoreId")
                        .HasColumnName("drug_store_id")
                        .HasColumnType("uuid");

                    b.Property<int>("Send")
                        .HasColumnName("send")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasColumnType("integer")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnName("update_date")
                        .HasColumnType("timestamp");

                    b.Property<Guid?>("UpdateUser")
                        .HasColumnName("update_user")
                        .HasColumnType("uuid");

                    b.Property<int>("WriteOffQty")
                        .HasColumnName("write_off_qty")
                        .HasColumnType("integer");

                    b.HasKey("Id")
                        .HasName("pk_tb_write_offs");

                    b.HasIndex("CreateDate")
                        .HasName("IX_CreateDate");

                    b.HasIndex("Status")
                        .HasName("IX_Status");

                    b.HasIndex("UpdateDate")
                        .HasName("IX_UpdateDate");

                    b.ToTable("tb_write_offs");
                });

            modelBuilder.Entity("Apteka.Postgres.spDistricts", b =>
                {
                    b.HasOne("Apteka.Postgres.spRegions", "Region")
                        .WithMany("spDistricts")
                        .HasForeignKey("RegionId")
                        .HasConstraintName("FK_dbo.spDistricts_dbo.spRegions_RegionId")
                        .IsRequired();
                });

            modelBuilder.Entity("Apteka.Postgres.spDrugStores", b =>
                {
                    b.HasOne("Apteka.Postgres.spDistricts", "District")
                        .WithMany("spDrugStores")
                        .HasForeignKey("DistrictId")
                        .HasConstraintName("FK_dbo.spDrugStores_dbo.spDistricts_DistrictId")
                        .IsRequired();

                    b.HasOne("Apteka.Postgres.spRegions", "Region")
                        .WithMany("spDrugStores")
                        .HasForeignKey("RegionId")
                        .HasConstraintName("FK_dbo.spDrugStores_dbo.spRegions_RegionId")
                        .IsRequired();
                });

            modelBuilder.Entity("Apteka.Postgres.spDrugs", b =>
                {
                    b.HasOne("Apteka.Postgres.spDrugCategories", "DrugCategory")
                        .WithMany("spDrugs")
                        .HasForeignKey("DrugCategoryId")
                        .HasConstraintName("FK_dbo.spDrugs_dbo.spDrugCategories_DrugCategoryId");

                    b.HasOne("Apteka.Postgres.spManufacturers", "Manufacturer")
                        .WithMany("spDrugs")
                        .HasForeignKey("ManufacturerId")
                        .HasConstraintName("FK_dbo.spDrugs_dbo.spManufacturers_ManufacturerId");

                    b.HasOne("Apteka.Postgres.spPharmGroups", "PharmGroup")
                        .WithMany("spDrugs")
                        .HasForeignKey("PharmGroupId")
                        .HasConstraintName("FK_dbo.spDrugs_dbo.spPharmGroups_PharmGroupId");

                    b.HasOne("Apteka.Postgres.spUnits", "Unit")
                        .WithMany("spDrugs")
                        .HasForeignKey("UnitId")
                        .HasConstraintName("FK_dbo.spDrugs_dbo.spUnits_UnitId")
                        .IsRequired();
                });

            modelBuilder.Entity("Apteka.Postgres.spManufacturers", b =>
                {
                    b.HasOne("Apteka.Postgres.spCountries", "Country")
                        .WithMany("spManufacturers")
                        .HasForeignKey("CountryId")
                        .HasConstraintName("FK_dbo.spManufacturers_dbo.spCountries_CountryId")
                        .IsRequired();
                });

            modelBuilder.Entity("Apteka.Postgres.tbCards", b =>
                {
                    b.HasOne("Apteka.Postgres.tbCustomers", "Customer")
                        .WithMany("tbCards")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK_dbo.tbCards_dbo.tbCustomers_CustomerId")
                        .IsRequired();

                    b.HasOne("Apteka.Postgres.tbDiscounts", "Discount")
                        .WithMany("tbCards")
                        .HasForeignKey("DiscountId")
                        .HasConstraintName("FK_dbo.tbCards_dbo.tbDiscounts_DiscountId")
                        .IsRequired();
                });

            modelBuilder.Entity("Apteka.Postgres.tbCashExpenses", b =>
                {
                    b.HasOne("Apteka.Postgres.tbUsers", "User")
                        .WithMany("tbCashExpenses")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_dbo.tbCashExpenses_dbo.tbUsers_UserId")
                        .IsRequired();
                });

            modelBuilder.Entity("Apteka.Postgres.tbDebtRepayments", b =>
                {
                    b.HasOne("Apteka.Postgres.tbBuyOnCredits", "BuyOnCredit")
                        .WithMany("tbDebtRepayments")
                        .HasForeignKey("BuyOnCreditId")
                        .HasConstraintName("FK_dbo.tbDebtRepayments_dbo.tbBuyOnCredits_BuyOnCreditId")
                        .IsRequired();

                    b.HasOne("Apteka.Postgres.tbDocs", "CashVoucher")
                        .WithMany("tbDebtRepayments")
                        .HasForeignKey("CashVoucherId")
                        .HasConstraintName("FK_dbo.tbDebtRepayments_dbo.tbDocs_CashVoucherId")
                        .IsRequired();
                });

            modelBuilder.Entity("Apteka.Postgres.tbDefectures", b =>
                {
                    b.HasOne("Apteka.Postgres.spDrugs", "Drug")
                        .WithMany("tbDefectures")
                        .HasForeignKey("DrugId")
                        .HasConstraintName("FK_dbo.tbDefectures_dbo.spDrugs_DrugId")
                        .IsRequired();

                    b.HasOne("Apteka.Postgres.spOrderStatus", "OrderStatus")
                        .WithMany("tbDefectures")
                        .HasForeignKey("OrderStatusId")
                        .HasConstraintName("FK_dbo.tbDefectures_dbo.spOrderStatus_OrderStatusId");
                });

            modelBuilder.Entity("Apteka.Postgres.tbDiscounts", b =>
                {
                    b.HasOne("Apteka.Postgres.spDiscountTypes", "DiscountType")
                        .WithMany("tbDiscounts")
                        .HasForeignKey("DiscountTypeId")
                        .HasConstraintName("FK_dbo.tbDiscounts_dbo.spDiscountTypes_DiscountTypeId")
                        .IsRequired();
                });

            modelBuilder.Entity("Apteka.Postgres.tbDocItems", b =>
                {
                    b.HasOne("Apteka.Postgres.tbDrugAdditionalInfoes", "AdditionalInfo")
                        .WithMany("tbDocItems")
                        .HasForeignKey("AdditionalInfoId")
                        .HasConstraintName("FK_dbo.tbDocItems_dbo.tbDrugAdditionalInfoes_AdditionalInfoId");

                    b.HasOne("Apteka.Postgres.tbDocs", "Document")
                        .WithMany("tbDocItems")
                        .HasForeignKey("DocumentId")
                        .HasConstraintName("FK_dbo.tbDocItems_dbo.tbDocs_DocumentId")
                        .IsRequired();

                    b.HasOne("Apteka.Postgres.spDrugs", "Drug")
                        .WithMany("tbDocItems")
                        .HasForeignKey("DrugId")
                        .HasConstraintName("FK_dbo.tbDocItems_dbo.spDrugs_DrugId")
                        .IsRequired();

                    b.HasOne("Apteka.Postgres.spOperationTypes", "OperationType")
                        .WithMany("tbDocItems")
                        .HasForeignKey("OperationTypeId")
                        .HasConstraintName("FK_dbo.tbDocItems_dbo.spOperationTypes_OperationTypeId")
                        .IsRequired();
                });

            modelBuilder.Entity("Apteka.Postgres.tbDocs", b =>
                {
                    b.HasOne("Apteka.Postgres.tbDiscounts", "Discount")
                        .WithMany("tbDocs")
                        .HasForeignKey("DiscountId")
                        .HasConstraintName("FK_dbo.tbDocs_dbo.tbDiscounts_DiscountId");

                    b.HasOne("Apteka.Postgres.spDistributors", "Distributor")
                        .WithMany("tbDocs")
                        .HasForeignKey("DistributorId")
                        .HasConstraintName("FK_dbo.tbDocs_dbo.spDistributors_DistributorId");
                });

            modelBuilder.Entity("Apteka.Postgres.tbDrugAdditionalInfoes", b =>
                {
                    b.HasOne("Apteka.Postgres.spDrugAdditionalInfoes", "InfoType")
                        .WithMany("tbDrugAdditionalInfoes")
                        .HasForeignKey("InfoTypeId")
                        .HasConstraintName("FK_dbo.tbDrugAdditionalInfoes_dbo.spDrugAdditionalInfoes_InfoTypeId")
                        .IsRequired();
                });

            modelBuilder.Entity("Apteka.Postgres.tbEncashments", b =>
                {
                    b.HasOne("Apteka.Postgres.tbUsers", "User")
                        .WithMany("tbEncashments")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_dbo.tbEncashments_dbo.tbUsers_UserId")
                        .IsRequired();
                });

            modelBuilder.Entity("Apteka.Postgres.tbInventoryItems", b =>
                {
                    b.HasOne("Apteka.Postgres.tbDocItems", "ComingProductsItem")
                        .WithMany("tbInventoryItems")
                        .HasForeignKey("ComingProductsItemId")
                        .HasConstraintName("FK_dbo.tbInventoryItems_dbo.tbDocItems_ComingProductsItemId")
                        .IsRequired();

                    b.HasOne("Apteka.Postgres.spDrugs", "Drug")
                        .WithMany("tbInventoryItems")
                        .HasForeignKey("DrugId")
                        .HasConstraintName("FK_dbo.tbInventoryItems_dbo.spDrugs_DrugId")
                        .IsRequired();

                    b.HasOne("Apteka.Postgres.tbInventories", "Inventoryt")
                        .WithMany("tbInventoryItems")
                        .HasForeignKey("InventorytId")
                        .HasConstraintName("FK_dbo.tbInventoryItems_dbo.tbInventories_InventorytId")
                        .IsRequired();
                });

            modelBuilder.Entity("Apteka.Postgres.tbMandatoryDrugs", b =>
                {
                    b.HasOne("Apteka.Postgres.spDrugs", "Drug")
                        .WithMany("tbMandatoryDrugs")
                        .HasForeignKey("DrugId")
                        .HasConstraintName("FK_dbo.tbMandatoryDrugs_dbo.spDrugs_DrugId")
                        .IsRequired();

                    b.HasOne("Apteka.Postgres.tbPriceItems", "PriceItem")
                        .WithMany("tbMandatoryDrugs")
                        .HasForeignKey("PriceItemId")
                        .HasConstraintName("FK_dbo.tbMandatoryDrugs_dbo.tbPriceItems_PriceItemId")
                        .IsRequired();
                });

            modelBuilder.Entity("Apteka.Postgres.tbMedicalInsurances", b =>
                {
                    b.HasOne("Apteka.Postgres.spInsurances", "Insurance")
                        .WithMany("tbMedicalInsurances")
                        .HasForeignKey("InsuranceId")
                        .HasConstraintName("FK_dbo.tbMedicalInsurances_dbo.spInsurances_InsuranceId")
                        .IsRequired();
                });

            modelBuilder.Entity("Apteka.Postgres.tbOrderItems", b =>
                {
                    b.HasOne("Apteka.Postgres.tbOrders", "Order")
                        .WithMany("tbOrderItems")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK_dbo.tbOrderItems_dbo.tbOrders_OrderId")
                        .IsRequired();
                });

            modelBuilder.Entity("Apteka.Postgres.tbPriceDocs", b =>
                {
                    b.HasOne("Apteka.Postgres.spDistributors", "Distributor")
                        .WithMany("tbPriceDocs")
                        .HasForeignKey("DistributorId")
                        .HasConstraintName("FK_dbo.tbPriceDocs_dbo.spDistributors_DistributorId")
                        .IsRequired();
                });

            modelBuilder.Entity("Apteka.Postgres.tbPriceItems", b =>
                {
                    b.HasOne("Apteka.Postgres.tbPriceDocs", "PriceDoc")
                        .WithMany("tbPriceItems")
                        .HasForeignKey("PriceDocId")
                        .HasConstraintName("FK_dbo.tbPriceItems_dbo.tbPriceDocs_PriceDocId")
                        .IsRequired();
                });

            modelBuilder.Entity("Apteka.Postgres.tbReceipts", b =>
                {
                    b.HasOne("Apteka.Postgres.tbDocs", "Docs")
                        .WithMany("tbReceipts")
                        .HasForeignKey("DocsId")
                        .HasConstraintName("FK_dbo.tbReceipts_dbo.tbDocs_DocsId")
                        .IsRequired();
                });

            modelBuilder.Entity("Apteka.Postgres.tbSdachis", b =>
                {
                    b.HasOne("Apteka.Postgres.tbDocItems", "DocItem")
                        .WithMany("tbSdachis")
                        .HasForeignKey("DocItemId")
                        .HasConstraintName("FK_dbo.tbSdachis_dbo.tbDocItems_DocItemId")
                        .IsRequired();
                });

            modelBuilder.Entity("Apteka.Postgres.tbTurnovers", b =>
                {
                    b.HasOne("Apteka.Postgres.spDrugs", "Drug")
                        .WithMany("tbTurnovers")
                        .HasForeignKey("DrugId")
                        .HasConstraintName("FK_dbo.tbTurnovers_dbo.spDrugs_DrugId")
                        .IsRequired();

                    b.HasOne("Apteka.Postgres.spDrugStores", "DrugStore")
                        .WithMany("tbTurnovers")
                        .HasForeignKey("DrugStoreId")
                        .HasConstraintName("FK_dbo.tbTurnovers_dbo.spDrugStores_DrugStore_Id")
                        .IsRequired();
                });

            modelBuilder.Entity("Apteka.Postgres.tbUsers", b =>
                {
                    b.HasOne("Apteka.Postgres.spRoles", "Role")
                        .WithMany("tbUsers")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_dbo.tbUsers_dbo.spRoles_RoleId")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
